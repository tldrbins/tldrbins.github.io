<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Powershell on TLDRBins</title>
    <link>https://tldrbins.github.io/@powershell/</link>
    <description>Recent content in Powershell on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@powershell/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Runas</title>
      <link>https://tldrbins.github.io/runas/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/runas/</guid>
      <description>Create credential object Method #1 Method #2 $username = &amp;#39;&amp;lt;DOMAIN&amp;gt;\&amp;lt;USER&amp;gt;&amp;#39; $password = ConvertTo-SecureString &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -AsPlainText -Force $cred = New-Object System.Management.Automation.PSCredential($username, $password) $username = &amp;#39;&amp;lt;DOMAIN&amp;gt;\&amp;lt;USER&amp;gt;&amp;#39; $password = &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; $secstr = New-Object -TypeName System.Security.SecureString $password.ToCharArray() | ForEach-Object {$secstr.AppendChar($_)} $cred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $secstr Runas (with cred object) Invoke-Command PSSession Invoke-Command -ScriptBlock { C:\ProgramData\rev.exe } -Credential $cred -Computer localhost # If error, try Invoke-Command -ScriptBlock { C:\ProgramData\rev.exe } -Credential $cred -Computer localhost -auth credssp # Invoke command with config Invoke-Command -ScriptBlock { C:\ProgramData\rev.</description>
    </item>
    <item>
      <title>Secure String</title>
      <link>https://tldrbins.github.io/secure_string/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/secure_string/</guid>
      <description>Decrypt secure string Windows $s = cat pass.xml $ss = Convertto-securestring -string $s $cred = new-object -typename System.Management.Automation.PSCredential -argumentlist &amp;#34;administrator&amp;#34;, $ss $cred.GetNetworkCredential().password </description>
    </item>
  </channel>
</rss>
