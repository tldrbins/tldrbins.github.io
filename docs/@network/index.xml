<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Network on TLDRBins</title>
    <link>https://tldrbins.github.io/@network/</link>
    <description>Recent content in Network on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@network/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Firewall (Linux)</title>
      <link>https://tldrbins.github.io/firewall_linux/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/firewall_linux/</guid>
      <description>Linux Check Firewall Rules # Show all rules sudo iptables -L -v -n --line-numbers # Show target chain sudo iptables -L &amp;lt;CHAIN&amp;gt; -v -n --line-numbers sudo iptables -L INPUT -v -n --line-numbers Set Firewall Rules # Default Policy sudo iptables -P &amp;lt;CHAIN&amp;gt; &amp;lt;RULE&amp;gt; sudo iptables -P INPUT DROP sudo iptables -A &amp;lt;CHAIN&amp;gt; -p &amp;lt;PROTOCOL&amp;gt; -s &amp;lt;SOURCE&amp;gt; --dport &amp;lt;PORT&amp;gt; -j &amp;lt;RULE&amp;gt; # Allow SSH from a specific subnet sudo iptables -A INPUT -p tcp -s 192.</description>
    </item>
    <item>
      <title>Firewall (Windows)</title>
      <link>https://tldrbins.github.io/firewall_windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/firewall_windows/</guid>
      <description>Windows Check Firewall Rules powershell cmd&#xA;# Check profiles Get-NetFirewallProfile *Evil-WinRM* PS C:\Users\maria&amp;gt; Get-NetFirewallProfile Name : Domain Enabled : False DefaultInboundAction : NotConfigured DefaultOutboundAction : NotConfigured AllowInboundRules : NotConfigured AllowLocalFirewallRules : NotConfigured AllowLocalIPsecRules : NotConfigured AllowUserApps : NotConfigured AllowUserPorts : NotConfigured AllowUnicastResponseToMulticast : NotConfigured NotifyOnListen : False EnableStealthModeForIPsec : NotConfigured LogFileName : %systemroot%\system32\LogFiles\Firewall\pfirewall.log LogMaxSizeKilobytes : 4096 LogAllowed : False LogBlocked : False LogIgnored : NotConfigured DisabledInterfaceAliases : {NotConfigured} ---[SNIP]--- # Check inbound rules Get-NetFirewallRule -Direction InBound -Enabled True PS C:\programdata&amp;gt; Get-NetFirewallRule -Direction Inbound -Enabled True Name : DeliveryOptimization-TCP-In DisplayName : Delivery Optimization (TCP-In) Description : Inbound rule to allow Delivery Optimization to connect to remote endpoints DisplayGroup : Delivery Optimization Group : @%systemroot%\system32\dosvc.</description>
    </item>
    <item>
      <title>Network Discovery</title>
      <link>https://tldrbins.github.io/network_discovery/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/network_discovery/</guid>
      <description>Test Connectivity Linux Windows # Default ping indefinitely ping -c3 &amp;lt;TARGET&amp;gt; # Default traceroute &amp;lt;TARGET&amp;gt; # ICMP echo request traceroute -I &amp;lt;TARGET&amp;gt; # TCP traceroute -T &amp;lt;TARGET&amp;gt; # UDP (filter evasion) traceroute -U &amp;lt;TARGET&amp;gt; # Set src port (filter evasion) traceroute --sport=&amp;lt;SRC_PORT&amp;gt; &amp;lt;TARGET&amp;gt; # Set dest port (filter evasion) traceroute -p &amp;lt;DEST_PORT&amp;gt; &amp;lt;TARGET&amp;gt; # Default 5 pings ping &amp;lt;TARGET&amp;gt; # Default tracert &amp;lt;TARGET&amp;gt; # Check specific port Test-NetConnection &amp;lt;TARGET&amp;gt; -Port &amp;lt;TARGET_PORT&amp;gt; # With Active Directory Module Installed Get-ADComputer -Filter * | ForEach-Object { $_ | Select-Object Name, @{Name=&amp;#39;IPAddress&amp;#39;;Expression={(Test-Connection -ComputerName $_.</description>
    </item>
    <item>
      <title>Network Traffic Pivoting</title>
      <link>https://tldrbins.github.io/network_traffic_privoting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/network_traffic_privoting/</guid>
      <description>chisel metasploit ssh socat sliver Basic # Start a local chisel Server ./chisel server --reverse --port 8000 $ ./chisel server --reverse --port 8000 2024/09/23 12:27:03 server: Reverse tunnelling enabled 2024/09/23 12:27:03 server: Fingerprint ikFn6iQOOodxIlcDQI4dvFu1pdHgV5UnHRenxUg0eho= 2024/09/23 12:27:03 server: Listening on http://0.0.0.0:8000 Ports forwarding # In target machine ./chisel client &amp;lt;LOCAL_IP&amp;gt;:8000 R:&amp;lt;TARGET_PORT&amp;gt;:127.0.0.1:&amp;lt;TARGET_PORT&amp;gt; # Mutiple ports fowarding, can be different targets in the same subnet ./chisel client &amp;lt;LOCAL_IP&amp;gt;:8000 R:8080:172.17.0.2:8080 R:5000:172.17.0.3:5000 Socks5 # In target machine .</description>
    </item>
    <item>
      <title>Nmap</title>
      <link>https://tldrbins.github.io/nmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/nmap/</guid>
      <description>Host Discovery Ping Scan nmap -sn &amp;lt;TARGET&amp;gt; $ nmap -sn 192.168.100.1 Starting Nmap 7.95 ( https://nmap.org ) at 2025-07-17 11:25 UTC Nmap scan report for 192.168.100.1 Host is up (0.41s latency). Nmap done: 1 IP address (1 host up) scanned in 1.35 seconds Scan Techniques (Bypass Network Filtering) TCP SYN to Listed Ports nmap -sn -PS&amp;lt;PORT_LIST&amp;gt; &amp;lt;TARGET&amp;gt; $ nmap -sn -PS53,80,443 192.168.100.1 Starting Nmap 7.95 ( https://nmap.org ) at 2025-07-17 11:25 UTC Nmap scan report for 192.</description>
    </item>
    <item>
      <title>openvpn</title>
      <link>https://tldrbins.github.io/openvpn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/openvpn/</guid>
      <description>Connect to vpn sudo openvpn my_vpn.ovpn </description>
    </item>
    <item>
      <title>VPN</title>
      <link>https://tldrbins.github.io/vpn/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/vpn/</guid>
      <description>Enum # Check with ikeV1 ike-scan -M &amp;lt;TARGET&amp;gt; # Check with ikeV2 ike-scan -M --ikev2 &amp;lt;TARGET&amp;gt; Connect to VPN strongswan sudo apt install strongswan Settings # Edit /etc/ipsec.secrets %any : PSK &amp;lt;PASSWORD&amp;gt; # Edit /etc/ipsec.conf (copy from ike-scan result) config setup charondebug=&amp;#34;all&amp;#34; uniqueids=yes strictcrlpolicy=no conn testvpn authby=secret auto=add ike=3des-sha1-modp1024! esp=3des-sha1! type=transport keyexchange=ikev1 left=&amp;lt;LOCAL&amp;gt; right=&amp;lt;TARGET&amp;gt; rightsubnet=&amp;lt;TARGET&amp;gt;[tcp] Connect # Reset ipsec restart # Connect ipsec up testvpn </description>
    </item>
  </channel>
</rss>
