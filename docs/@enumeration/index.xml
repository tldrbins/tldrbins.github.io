<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Enumeration on TLDRBins</title>
    <link>https://tldrbins.github.io/@enumeration/</link>
    <description>Recent content in Enumeration on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tldrbins.github.io/@enumeration/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure Enum</title>
      <link>https://tldrbins.github.io/azure_enum/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/azure_enum/</guid>
      <description>Recon ROADTools TeamFiltration 1. Authenticate roadrecon auth -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; ┌──(venv)─(kali㉿kali)-[~] └─$ roadrecon auth -u &amp;#39;apple.seed@example.com&amp;#39; -p &amp;#39;Test1234&amp;#39; Tokens were written to .roadtools_auth 2. Info Gathering roadrecon gather ┌──(venv)─(kali㉿kali)-[~] └─$ roadrecon gather Starting data gathering phase 1 of 2 (collecting objects) Starting data gathering phase 2 of 2 (collecting properties and relationships) ROADrecon gather executed in 12.27 seconds and issued 1152 HTTP requests. 3. Explore the Data roadrecon gui ┌──(venv)─(kali㉿kali)-[~] └─$ roadrecon gui * Serving Flask app &amp;#39;roadtools.</description>
    </item>
    <item>
      <title>Cloud Enum</title>
      <link>https://tldrbins.github.io/cloud_enum/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/cloud_enum/</guid>
      <description>Cloud Enum cloud_enum python3 cloud_enum.py -k &amp;lt;KEYWORD&amp;gt; ┌──(venv)─(kali㉿kali)-[~/Desktop] └─$ python3 cloud_enum.py -k example.com ########################## cloud_enum github.com/initstring ########################## Keywords: example.com Mutations: /home/kali/Desktop/cloud_enum/enum_tools/fuzz.txt Brute-list: /home/kali/Desktop/cloud_enum/enum_tools/fuzz.txt [+] Mutations list imported: 306 items [+] Mutated results: 1837 items ++++++++++++++++++++++++++ amazon checks ++++++++++++++++++++++++++ [+] Checking for S3 buckets OPEN S3 BUCKET: http://example.com.s3.amazonaws.com/ FILES: -&amp;gt;http://example.com.s3.amazonaws.com/example.com ...[SNIP]... -&amp;gt;http://example.com.s3.amazonaws.com/tmp/ -&amp;gt;http://example.com.s3.amazonaws.com/tmp/abcd1234/ -&amp;gt;http://example.com.s3.amazonaws.com/tmp/abcd1234/.htaccess -&amp;gt;http://example.com.s3.amazonaws.com/tmp/abcd1234/.htpasswd ...[SNIP]... Ref: cloud_enum</description>
    </item>
    <item>
      <title>Bloodhound</title>
      <link>https://tldrbins.github.io/bloodhound/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/bloodhound/</guid>
      <description>Info Collection (From Linux) bloodhound-python nxc certipy-ad # Password bloodhound-python -d &amp;lt;DOMAIN&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -dc &amp;lt;DC&amp;gt; -ns &amp;lt;DC_IP&amp;gt; -c all --zip $ python3 bloodhound.py -d rebound.htb -u oorend -p &amp;#39;1GR8t@$$4u&amp;#39; -dc dc01.rebound.htb -ns 10.10.11.231 -c all --zip INFO: Found AD domain: rebound.htb INFO: Getting TGT for user INFO: Connecting to LDAP server: dc01.rebound.htb WARNING: LDAP Authentication is refused because LDAP signing is enabled. Trying to connect over LDAPS instead.</description>
    </item>
    <item>
      <title>DNS Enum</title>
      <link>https://tldrbins.github.io/dns_enum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/dns_enum/</guid>
      <description>Linux Windows Zone Transfer dig +noall +answer &amp;lt;DOMAIN&amp;gt; axfr @&amp;lt;TARGET&amp;gt; $ dig +noall +answer snoopy.htb axfr @10.10.11.212 snoopy.htb. 86400 IN SOA ns1.snoopy.htb. ns2.snoopy.htb. 2022032612 3600 1800 604800 86400 snoopy.htb. 86400 IN NS ns1.snoopy.htb. snoopy.htb. 86400 IN NS ns2.snoopy.htb. mattermost.snoopy.htb. 86400 IN A 172.18.0.3 mm.snoopy.htb. 86400 IN A 127.0.0.1 ns1.snoopy.htb. 86400 IN A 10.0.50.10 ns2.snoopy.htb. 86400 IN A 10.0.51.10 postgres.snoopy.htb. 86400 IN A 172.18.0.2 provisions.snoopy.htb. 86400 IN A 172.18.0.4 www.snoopy.htb. 86400 IN A 127.</description>
    </item>
    <item>
      <title>Drupal</title>
      <link>https://tldrbins.github.io/drupal/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/drupal/</guid>
      <description>Enum droopescan droopescan scan drupal -u &amp;lt;TARGET&amp;gt; Ref: droopescan Note: This can take a long time to run</description>
    </item>
    <item>
      <title>Find</title>
      <link>https://tldrbins.github.io/find/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/find/</guid>
      <description>Linux Locate a file locate &amp;lt;FILE&amp;gt; Find files of type file find . -type f Find and Open find / -name &amp;lt;FILE&amp;gt; -exec cat {} \; Find SUID bit set files find / -type f -user root \( -perm -4000 -o -perm -2000 \) 2&amp;gt;/dev/null -ls Find files owned by user find / -user &amp;lt;USER&amp;gt; -ls 2&amp;gt;/dev/null | grep -v -e &amp;#34; \/proc&amp;#34; -e &amp;#34; \/sys&amp;#34; Find files owned by group find / -group &amp;lt;GROUP&amp;gt; 2&amp;gt;/dev/null | grep -v -e ^/proc Find files created between 1/1/2024 and 31/12/2024 find / -type f -newermt 2024-01-01 !</description>
    </item>
    <item>
      <title>Finger Protocol</title>
      <link>https://tldrbins.github.io/finger/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/finger/</guid>
      <description>Basic # Check logged in users finger @&amp;lt;TARGET&amp;gt; # Check valid user finger &amp;lt;USER&amp;gt;@&amp;lt;TARGET&amp;gt; Brute force usernames perl finger-user-enum.pl -U /usr/share/seclists/Usernames/Names/names.txt -t &amp;lt;TARGET&amp;gt; Ref: finger-user-enum</description>
    </item>
    <item>
      <title>git</title>
      <link>https://tldrbins.github.io/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/git/</guid>
      <description>Basic Commands # Show status git status # Reset the current branch to a previous commit git reset --hard # Show information about files git ls-files --stage # Show current branch git branch # Show commits git log &amp;lt;BRANCH_NAME&amp;gt; --oneline # Show diff, a and b are commit hash # a is the older commit git diff &amp;lt;A_COMMIT_HASH&amp;gt; &amp;lt;B_COMMIT_HASH&amp;gt; # Show commit git show &amp;lt;COMMIT_HASH&amp;gt; Git Tools git-dumper git-bundle git-dumper &amp;lt;TARGET&amp;gt; result/ Ref: git-dumper</description>
    </item>
    <item>
      <title>Grep</title>
      <link>https://tldrbins.github.io/grep/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/grep/</guid>
      <description>Basic grep &amp;#39;&amp;lt;STRING&amp;gt;&amp;#39; &amp;lt;FILE&amp;gt; Grep from files recursively (e.g from current directory) grep -rni &amp;#39;&amp;lt;STRING&amp;gt;&amp;#39; . Grep from binary grep -a &amp;#39;&amp;lt;STRING&amp;gt;&amp;#39; &amp;lt;FILE&amp;gt; Grep hash from binary with perl regex grep -aPo &amp;#39;[a-fA-F0-9]{32}&amp;#39; &amp;lt;FILE&amp;gt; Grep from binaries recusively (e.g. from /var/log) sudo grep -rHa &amp;#34;&amp;lt;STRING&amp;gt;&amp;#34; /var/log Find unique char of a file cat &amp;lt;FILE&amp;gt; | od -cvA none -w1 | sort -bu | tr -d &amp;#39;\n&amp;#39; | tr -d &amp;#39; &amp;#39; </description>
    </item>
    <item>
      <title>IMAP</title>
      <link>https://tldrbins.github.io/imap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/imap/</guid>
      <description>IMAP/IMAPS # Connect to IMAP over ssl rlwrap openssl s_client -connect &amp;lt;TARGET&amp;gt;:993 $ rlwrap openssl s_client -connect 10.10.10.197:993 Connecting to 10.10.10.197 CONNECTED(00000003) Can&amp;#39;t use SSL_get_servername depth=0 CN=localhost, OU=Automatically-generated IMAP SSL key, O=Courier Mail Server, L=New York, ST=NY, C=US verify error:num=18:self-signed certificate verify return:1 depth=0 CN=localhost, OU=Automatically-generated IMAP SSL key, O=Courier Mail Server, L=New York, ST=NY, C=US verify error:num=10:certificate has expired notAfter=May 14 17:14:21 2021 GMT verify return:1 depth=0 CN=localhost, OU=Automatically-generated IMAP SSL key, O=Courier Mail Server, L=New York, ST=NY, C=US notAfter=May 14 17:14:21 2021 GMT verify return:1 --- Certificate chain 0 s:CN=localhost, OU=Automatically-generated IMAP SSL key, O=Courier Mail Server, L=New York, ST=NY, C=US i:CN=localhost, OU=Automatically-generated IMAP SSL key, O=Courier Mail Server, L=New York, ST=NY, C=US a:PKEY: rsaEncryption, 3072 (bit); sigalg: RSA-SHA256 v:NotBefore: May 14 17:14:21 2020 GMT; NotAfter: May 14 17:14:21 2021 GMT --- Server certificate -----BEGIN CERTIFICATE----- MIIE6zCCA1OgAwIBAgIBATANBgkqhkiG9w0BAQsFADCBjjESMBAGA1UEAxMJbG9j YWxob3N0MS0wKwYDVQQLEyRBdXRvbWF0aWNhbGx5LWdlbmVyYXRlZCBJTUFQIFNT TCBrZXkxHDAaBgNVBAoTE0NvdXJpZXIgTWFpbCBTZXJ2ZXIxETAPBgNVBAcTCE5l dyBZb3JrMQswCQYDVQQIEwJOWTELMAkGA1UEBhMCVVMwHhcNMjAwNTE0MTcxNDIx WhcNMjEwNTE0MTcxNDIxWjCBjjESMBAGA1UEAxMJbG9jYWxob3N0MS0wKwYDVQQL EyRBdXRvbWF0aWNhbGx5LWdlbmVyYXRlZCBJTUFQIFNTTCBrZXkxHDAaBgNVBAoT E0NvdXJpZXIgTWFpbCBTZXJ2ZXIxETAPBgNVBAcTCE5ldyBZb3JrMQswCQYDVQQI EwJOWTELMAkGA1UEBhMCVVMwggGiMA0GCSqGSIb3DQEBAQUAA4IBjwAwggGKAoIB gQDCzBP4iuxxLmXPkmi5jABQrywLJK0meyW49umfYhqayBH7qtuIjyAmznnyDIR0 543qHgWAfSvGHLFDB9B1wnkvAU3aprjURn1956X/4jEi9xmhRwvum5T+vp3TT96d JgW9SSLiPFQty5eVrKuQvg1bZg/Vjp7CUUQ0+7PmdylMOipohls5RDEppCDGFmiS HN0ZayXpjd/kwqZ/O9uTJGHOzagY+ruTYAx3tanO4oDwdrz9FPr3S2KNPTjjtzqf CPdcsi+6JTQJI03eMEftBKo3HZTp7Hx6FObZcvcNskTLqtsYZYuzHS7KQwiuTAJ5 d/ZKowCeJDaVlS35tQleisu+pJCkwcStpM1BJ51UQRZ5IpvItTfnrChEa1uyTlAy ZIOQK2/+34K2ZrldYWyfKlYHxieGZgzQXLo/vyW/1gqzXy7KHx+Uuf4CAzzOP1p3 8QNmvsqkJrQMuH3XPXLswr9A1gPe7KTLEGNRJSxcGF1Q25m4e04HhZzK76KlBfVt IJ0CAwEAAaNSMFAwDAYDVR0TAQH/BAIwADAhBgNVHREEGjAYgRZwb3N0bWFzdGVy QGV4YW1wbGUuY29tMB0GA1UdDgQWBBTylxdM/AHlToKxNvmnPdXJCjjbnDANBgkq hkiG9w0BAQsFAAOCAYEAAo7NqfYlXSEC8q3JXvI5EeVpkgBDOwnjxuC/P5ziEU0c PRx6L3w+MxuYJdndC0hT9FexXzSgtps9Xm+TE81LgNvuipZ9bulF5pMmmO579U2Y suJJpORD4P+65ezkfWDbPbdKyHMeRvVCkZCH74z2rCu+OeQTGb6GLfaaB7v9dThR rfvHwM50hxNb4Zb4of7Eyw2OJGeeohoG4mFT4v7cu1WwimsDF/A7OCVOmvvFWeRA EjdEReekDJsBFpHa8uRjxZ+4Ch9YvbFlYtYi6VyXV1AFR1Mb91w+iIitc6ROzjJ2 pVO69ePygQcjBRUTDX5reuBzaF5p9/6Ta9HP8NDI9+gdw6VGVTmYRJUbj7OeKSUq FWUmtZYC288ErDAZ7z+6VqJtZsPXIItZ8J6UZE3zBclGMcQ7peL9wEvJQ8oSaHHM AmgHIoMwKXSNEkHbBD24cf9KwVhcyJ4QCrSJBMAys98X6TzCwQI4Hy7XyifU3x/L XUFD0JSVQp4Rmcg5Uzuk -----END CERTIFICATE----- subject=CN=localhost, OU=Automatically-generated IMAP SSL key, O=Courier Mail Server, L=New York, ST=NY, C=US issuer=CN=localhost, OU=Automatically-generated IMAP SSL key, O=Courier Mail Server, L=New York, ST=NY, C=US --- No client certificate CA names sent Peer signing digest: SHA256 Peer signature type: RSA-PSS Server Temp Key: X25519, 253 bits --- SSL handshake has read 1947 bytes and written 518 bytes Verification error: certificate has expired --- New, TLSv1.</description>
    </item>
    <item>
      <title>Kerberos</title>
      <link>https://tldrbins.github.io/kerberos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/kerberos/</guid>
      <description>Users Enum kerbrute metasploit kerbrute userenum --domain &amp;lt;DOMAIN&amp;gt; --dc &amp;lt;DC&amp;gt; &amp;lt;USERS_FILE&amp;gt; $ kerbrute userenum --domain absolute.htb --dc dc.absolute.htb usernames.txt __ __ __ / /_____ _____/ /_ _______ __/ /____ / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \ / ,&amp;lt; / __/ / / /_/ / / / /_/ / /_/ __/ /_/|_|\___/_/ /_.___/_/ \__,_/\__/\___/ Version: v1.0.3 (9dad6e1) - 09/24/24 - Ronnie Flathers @ropnop 2024/09/24 14:54:41 &amp;gt; Using KDC(s): 2024/09/24 14:54:41 &amp;gt; dc.</description>
    </item>
    <item>
      <title>LDAP</title>
      <link>https://tldrbins.github.io/ldap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/ldap/</guid>
      <description>Enum ldapsearch ldapdomaindump nmap # Get domain base ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -s base namingcontexts # Get all from domain ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # Just get a class (e.g. person) ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; &amp;#39;(objectClass=person)&amp;#39; # With creds ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -D &amp;#34;CN=&amp;lt;USER&amp;gt;,CN=Users,DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#34; -w &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # With creds ldapdomaindump -u &amp;#39;&amp;lt;DOMAIN&amp;gt;\&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; &amp;lt;TARGET&amp;gt; -o ./ldap # Using nmap script sudo nmap -p 389 --script ldap-search &amp;lt;TARGET&amp;gt; Enum with Kerberos ldapsearch nxc # Add GSSAPI sudo apt install libsasl2-modules-gssapi-mit ldapsearch -H ldap://&amp;lt;TARGET&amp;gt; -Y GSSAPI -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # With kerberos nxc ldap &amp;lt;TARGET&amp;gt; -u &amp;lt;USER&amp;gt; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -k --users </description>
    </item>
    <item>
      <title>MongoDB General</title>
      <link>https://tldrbins.github.io/mongodb_general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/mongodb_general/</guid>
      <description>General Connect to Mongo Database anonymous authenticate mongosh &amp;lt;TARGET&amp;gt;:27017 $ mongosh 172.17.0.3:27017 Current Mongosh Log ID: 66f2fa2192b07a1eeb856ec6 Connecting to: mongodb://172.17.0.3:27017/?directConnection=true&amp;amp;appName=mongosh+2.2.12 Using MongoDB: 5.0.6 Using Mongosh: 2.2.12 For mongosh info see: https://docs.mongodb.com/mongodb-shell/ ------ The server generated these startup warnings when booting 2024-09-24T10:44:22.876+00:00: Using the XFS filesystem is strongly recommended with the WiredTiger storage engine. See http://dochub.mongodb.org/core/prodnotes-filesystem 2024-09-24T10:44:23.824+00:00: Access control is not enabled for the database. Read and write access to data and configuration is unrestricted ------ Warning: Found ~/.</description>
    </item>
    <item>
      <title>Mount Share</title>
      <link>https://tldrbins.github.io/share_mount/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/share_mount/</guid>
      <description>nfs smb List share showmount -e &amp;lt;TARGET&amp;gt; $ showmount -e 10.10.11.191 Export list for 10.10.11.191: /home/ross * /var/www/html * Mount share sudo mkdir /mnt/share $ sudo mkdir /mnt/share sudo mount -t nfs &amp;lt;TARGET&amp;gt;:&amp;lt;SHARE&amp;gt; /mnt/share/ $ sudo mount -t nfs 10.10.11.191:/home/ross /mnt/share/ $ ls /mnt/share Desktop Documents Downloads Music Pictures Public Templates Videos Unmount share sudo umount /mnt/share/ $ sudo umount /mnt/share/ Mount share sudo mount -t cifs //&amp;lt;TARGET&amp;gt;/&amp;lt;SHARE&amp;gt; /mnt # Without creds sudo mount -t cifs -o user=,password= //&amp;lt;TARGET&amp;gt;/&amp;lt;SHARE&amp;gt; /mnt # With creds sudo mount -t cifs -o user=&amp;#39;&amp;lt;USER&amp;gt;&amp;#39;,pass=&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; //&amp;lt;TARGET&amp;gt;/&amp;lt;SHARE&amp;gt; /mnt $ sudo mount -t cifs -o ro,user=&amp;#39;localadmin&amp;#39;,password=&amp;#39;Secret123&amp;#39; //10.</description>
    </item>
    <item>
      <title>NetExec (nxc)</title>
      <link>https://tldrbins.github.io/nxc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/nxc/</guid>
      <description>Basic Commands Password NTLM Kerberos # Single User, Single Password nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; # Single User, Single Password, Local Auth nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; --local-auth # Single User, Single Password (Active Directory) nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -d &amp;lt;DOMAIN&amp;gt; # Single User, Multiple Passwords nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;lt;PASSWORDS&amp;gt; -d &amp;lt;DOMAIN&amp;gt; # Multiple Users, Single Password nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;lt;USERS&amp;gt; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -d &amp;lt;DOMAIN&amp;gt; --continue-on-success # Multiple Users, Multiple Passwords nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;lt;USERS&amp;gt; -p &amp;lt;PASSWORDS&amp;gt; -d &amp;lt;DOMAIN&amp;gt; --continue-on-success # Match Username to Corresponding Password nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;lt;USERS&amp;gt; -p &amp;lt;PASSWORDS&amp;gt; --no-bruteforce --continue-on-success nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -H &amp;lt;HASH&amp;gt; # With Kerberos, or STATUS_ACCOUNT_RESTRICTION (NTLM disabled) nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -d &amp;lt;DOMAIN&amp;gt; -k # With Kerberos ccache, or STATUS_NOT_SUPPORTED (NTLM disabled) nxc &amp;lt;PROTOCOL&amp;gt; &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -d &amp;lt;DOMAIN&amp;gt; -k --use-kcache Hint: We can also run on multiple targets</description>
    </item>
    <item>
      <title>Nmap</title>
      <link>https://tldrbins.github.io/nmap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/nmap/</guid>
      <description>Nmap Scan TCP UDP Script target=&amp;lt;TARGET&amp;gt; nmap -p- --min-rate 10000 -oA ./nmap-alltcp $target ports=$(cat nmap-alltcp.nmap| grep -Eo &amp;#34;^[0-9]+&amp;#34; | tr &amp;#39;\n&amp;#39; &amp;#39;,&amp;#39; | sed -r &amp;#39;s/,$//&amp;#39;) nmap -p $ports -sCV -oA ./nmap-tcpscripts $target target=&amp;lt;TARGET&amp;gt; nmap -sU --min-rate 10000 -oA ./nmap-udp $target ports=$(cat nmap-udp.nmap| grep -Eo &amp;#34;^[0-9]+&amp;#34; | tr &amp;#39;\n&amp;#39; &amp;#39;,&amp;#39; | sed -r &amp;#39;s/,$//&amp;#39;) nmap -p $ports -sU -sCV -oA ./nmap-udpscripts $target Update scripts DB nmap --script-updatedb Search scripts # e.</description>
    </item>
    <item>
      <title>Oracle Database</title>
      <link>https://tldrbins.github.io/oracle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/oracle/</guid>
      <description>Tools sqlplus ODAT # Install sudo apt install oracle-instantclient-sqlplus # export LD_LIBRARY_PATH export LD_LIBRARY_PATH=/usr/lib/oracle/19.6/client64/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH} # Check sqlplus -V # Install sudo apt install odat # Check odat --version Ref: Download ODAT&#xA;Enum # SID enum (You only need one) odat sidguesser -s &amp;lt;TARGET&amp;gt; # User/Password brute force odat passwordguesser -s &amp;lt;TARGET&amp;gt; -d &amp;lt;SID&amp;gt; --accounts-file accounts.txt # Run all checks with creds as sysdba odat all -s &amp;lt;TARGET&amp;gt; -U &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -P &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -d &amp;lt;SID&amp;gt; --sysdba General # Export everytime or add to ~/.</description>
    </item>
    <item>
      <title>POP3</title>
      <link>https://tldrbins.github.io/pop3/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/pop3/</guid>
      <description>Basic # Connect to POP3 mail server telnet &amp;lt;TARGET&amp;gt; 110 # Send cmd after +OK USER &amp;lt;USER&amp;gt; PASS &amp;lt;PASSWORD&amp;gt; # List all mails LIST # Retrieve mail #1 RETR 1 # Exit Ctrl + ], then quit </description>
    </item>
    <item>
      <title>RPC</title>
      <link>https://tldrbins.github.io/rpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/rpc/</guid>
      <description>Remote Procedure Call Tools rpcclient impacket # Anonymous rpcclient -U &amp;#39;&amp;#39; -N &amp;lt;TARGET&amp;gt; $ rpcclient -U &amp;#39;&amp;#39; -N 10.10.10.172 rpcclient $&amp;gt; # Password rpcclient -U &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;%&amp;lt;PASSWORD&amp;gt;&amp;#39; &amp;lt;TARGET&amp;gt; # NTLM rpcclient -U &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;%&amp;lt;HASH&amp;gt;&amp;#39; --pw-nt-hash &amp;lt;TARGET&amp;gt; # Inline Execute Command rpcclient -U &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;%&amp;lt;PASSWORD&amp;gt;&amp;#39; &amp;lt;TARGET&amp;gt; -c &amp;#39;querydispinfo&amp;#39; Basic Commands # General info querydispinfo rpcclient $&amp;gt; querydispinfo index: 0xfb6 RID: 0x450 acb: 0x00000210 Account: AAD_987d7f2f57d2 Name: AAD_987d7f2f57d2 Desc: Service account for the Synchronization Service with installation identifier 05c97990-7587-4a3d-b312-309adfc172d9 running on computer MONTEVERDE.</description>
    </item>
    <item>
      <title>rsync</title>
      <link>https://tldrbins.github.io/rsync/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/rsync/</guid>
      <description>Basic Commands # List directory (&amp;#39;/&amp;#39;) rsync --list-only -a rsync://&amp;lt;TARGET&amp;gt;/ # List directory (&amp;#39;/&amp;#39;) with ipv6 rsync --list-only -a rsync://[&amp;lt;TARGET_IPV6&amp;gt;]:8730/ # List a file rsync --list-only -a rsync://&amp;lt;TARGET&amp;gt;/etc/passwd # List files (wildcard) rsync --list-only -a rsync://&amp;lt;TARGET&amp;gt;/etc/rsync* # Get a file rsync -a rsync://&amp;lt;TARGET&amp;gt;/etc/passwd . # Get files (wildcard) rsync -a rsync://&amp;lt;TARGET&amp;gt;/etc/rsync* . # Copy files recusively to remote (With Creds) export RSYNC_PASSWORD=&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39;; rsync -aR .ssh/ rsync://&amp;lt;USER&amp;gt;@&amp;lt;TARGET&amp;gt;/home_user/ Bruteforce rsync password # Get user from /etc/passwd, Get module from /etc/rsyncrsyncd.</description>
    </item>
    <item>
      <title>Scheduled tasks</title>
      <link>https://tldrbins.github.io/scheduled_tasks_windows/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/scheduled_tasks_windows/</guid>
      <description>Check scheduled tasks Windows schtasks /query *Evil-WinRM* PS C:\Users\Administrator\Documents&amp;gt; schtasks /query Folder: \ TaskName Next Run Time Status ======================================== ====================== =============== CleanUpDownloads N/A Ready CreateExplorerShellUnelevatedTask N/A Ready fix_vm N/A Ready OneDriveUpdate N/A Running User_Feed_Synchronization-{0041D634-0AC8 9/25/2024 12:48:00 AM Ready User_Feed_Synchronization-{12517E1A-613E 9/24/2024 6:58:48 PM Ready ...[SNIP]... # List details schtasks /TN &amp;#39;\&amp;lt;FOLDER&amp;gt;\&amp;lt;TASKNAME&amp;gt;&amp;#39; /FO LIST /V *Evil-WinRM* PS C:\Users\Administrator\Documents&amp;gt; schtasks /TN \OneDriveUpdate /FO LIST /V Folder: \ HostName: DC TaskName: \OneDriveUpdate Next Run Time: N/A Status: Running Logon Mode: Interactive only Last Run Time: 9/24/2024 6:12:00 PM Last Result: 267009 Author: HOSPITAL\Administrator Task To Run: powershell.</description>
    </item>
    <item>
      <title>SMB Enum</title>
      <link>https://tldrbins.github.io/smb_enum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/smb_enum/</guid>
      <description>SMB Share Enum nmap sudo nmap --script=smb-enum-shares -p 445 &amp;lt;TARGET&amp;gt; $ sudo nmap --script=smb-enum-shares -p 445 10.10.11.207 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-09-25 04:53 GMT Nmap scan report for 10.10.11.207 Host is up (0.26s latency). PORT STATE SERVICE 445/tcp open microsoft-ds Nmap done: 1 IP address (1 host up) scanned in 7.96 seconds Anonymous Login smbmap smbclient impacket smbmap -H &amp;lt;TARGET&amp;gt; --no-banner smbmap -H &amp;lt;TARGET&amp;gt; -u null --no-banner # List known share smbmap -H &amp;lt;TARGET&amp;gt; -r &amp;lt;SHARE&amp;gt; smbclient -N -L \\\\&amp;lt;TARGET&amp;gt;\\ $ smbclient -N -L \\\\10.</description>
    </item>
    <item>
      <title>SMTP</title>
      <link>https://tldrbins.github.io/smtp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/smtp/</guid>
      <description>Simple Mail Debugging Server #!/usr/bin/env python3 import aiosmtpd.controller class CustomSMTPHandler: async def handle_DATA(self, server, session, envelope): print(f&amp;#34;[+] Received a mail.&amp;#34;) print(&amp;#34;=&amp;#34; * 50) print(envelope.content.decode()) print(&amp;#34;=&amp;#34; * 50) return &amp;#34;250 OK&amp;#34; handler = CustomSMTPHandler() server = aiosmtpd.controller.Controller(handler, hostname=&amp;#34;0.0.0.0&amp;#34;, port=25) server.start() print(&amp;#34;[*] Listening on 0.0.0.0:25&amp;#34;) input(&amp;#34;[*] Server started. Press Return to quit.\n&amp;#34;) server.stop() Users Enum nmap script smtp-user-enum nmap -p 25 --script=smtp-enum-users &amp;lt;TARGET&amp;gt; # Use RCPT smtp-user-enum -M RCPT -U /usr/share/seclists/Usernames/cirt-default-usernames.txt -t &amp;lt;TARGET&amp;gt; # Use VRFY smtp-user-enum -M VRFY -U /usr/share/seclists/Usernames/cirt-default-usernames.</description>
    </item>
    <item>
      <title>SNMP</title>
      <link>https://tldrbins.github.io/snmp/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/snmp/</guid>
      <description>Bruteforce commmuity string onesixtyone snmpbrute # Brute force community string for snmpwalk use onesixtyone &amp;lt;TARGET&amp;gt; -c /usr/share/doc/onesixtyone/dict.txt $ onesixtyone 10.10.11.248 -c /usr/share/doc/onesixtyone/dict.txt Scanning 1 hosts, 50 communities 10.10.11.248 [public] Linux monitored 5.10.0-28-amd64 #1 SMP Debian 5.10.209-2 (2024-01-31) x86_64 Ref: onesixtyone&#xA;# Brute force community string (Check also SNMPv2) python3 snmpbrute.py -t &amp;lt;TARGET&amp;gt; $ python3 snmpbrute.py -t 10.10.11.248 _____ _ ____ _______ ____ __ / ___// | / / |/ / __ \ / __ )_______ __/ /____ \__ \/ |/ / /|_/ / /_/ / / __ / ___/ / / / __/ _ \ ___/ / /| / / / / ____/ / /_/ / / / /_/ / /_/ __/ /____/_/ |_/_/ /_/_/ /_____/_/ \__,_/\__/\___/ SNMP Bruteforce &amp;amp; Enumeration Script v2.</description>
    </item>
    <item>
      <title>SQLite</title>
      <link>https://tldrbins.github.io/sqlite/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/sqlite/</guid>
      <description>General # Open a db sqlite3 &amp;lt;DB_FILE&amp;gt; # Show tables .tables # Show schema of a table .schema &amp;lt;TABLE_NAME&amp;gt; # Show column headers .headers on # Dump data select * from &amp;lt;TABLE_NAME&amp;gt;; </description>
    </item>
    <item>
      <title>Squid Proxy</title>
      <link>https://tldrbins.github.io/squid_proxy/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/squid_proxy/</guid>
      <description>Config location /etc/squid/squid.conf Connect via FoxyProxy Firefox plugin +--------------------------+ | Settings | +--------------------------+ | Title : squid proxy | | Proxy Type : HTTP | | Proxy IP : &amp;lt;TARGET&amp;gt; | | Port : 3128 | | Username : (If any) | | Password : (If any) | +--------------------------+ # Connect http://&amp;lt;TARGET&amp;gt; # Or http://127.0.0.1 Internal ports scan via proxy # 1. Take note of word size, then Ctrl+C wfuzz -z range,1-1000 -p &amp;lt;TARGET&amp;gt;:3128:HTTP -u http://127.</description>
    </item>
    <item>
      <title>Subdomain Enum</title>
      <link>https://tldrbins.github.io/subdomain_enum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/subdomain_enum/</guid>
      <description>Add domain/subdomain to /etc/hosts echo &amp;#34;&amp;lt;TARGET_IP&amp;gt; &amp;lt;DOMAIN&amp;gt;&amp;#34; | sudo tee -a /etc/hosts wfuzz gobuster wfuzz -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -H &amp;#34;Host: FUZZ.&amp;lt;DOMAIN&amp;gt;&amp;#34; -u &amp;#39;http://&amp;lt;DOMAIN&amp;gt;&amp;#39; Take note of the word size, Ctrl+C to interrupt the process, then run again wfuzz -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -H &amp;#34;Host: FUZZ.&amp;lt;DOMAIN&amp;gt;&amp;#34; -u &amp;#39;http://&amp;lt;DOMAIN&amp;gt;&amp;#39; --hw &amp;lt;WORD&amp;gt; Filter out response with header # For example: Access-Control-Allow-Origin wfuzz -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.txt -H &amp;#34;Origin: http://FUZZ.&amp;lt;DOMAIN&amp;gt;&amp;#34; --filter &amp;#34;r.headers.response ~ &amp;#39;Access-Control-Allow-Origin&amp;#39;&amp;#34; -u &amp;#39;http://&amp;lt;DOMAIN&amp;gt;&amp;#39; gobuster vhost -w /usr/share/seclists/Discovery/DNS/bitquark-subdomains-top100000.</description>
    </item>
    <item>
      <title>Volume Shadow Copies</title>
      <link>https://tldrbins.github.io/volume_shadow_copies/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/volume_shadow_copies/</guid>
      <description>Abuse #1: Recover data from shadow copies Windows 1. Check vssadmin list shadows PS C:\Windows\system32&amp;gt; vssadmin list shadows vssadmin list shadows vssadmin 1.1 - Volume Shadow Copy Service administrative command-line tool (C) Copyright 2001-2013 Microsoft Corp. Contents of shadow copy set ID: {001689e5-f1a7-40a8-8b5b-8b6371bd07ca} Contained 1 shadow copies at creation time: 9/9/2019 3:10:57 AM Shadow Copy ID: {046396e4-6312-45b7-96cd-5e5f6fb017ef} Original Volume: (C:)\\?\Volume{21385651-0000-0000-0000-602200000000}\ Shadow Copy Volume: \\?\GLOBALROOT\Device\HarddiskVolumeShadowCopy1 Originating Machine: dev.htb.local Service Machine: dev.htb.local Provider: &amp;#39;Microsoft Software Shadow Copy provider 1.</description>
    </item>
    <item>
      <title>Web Directory Enum</title>
      <link>https://tldrbins.github.io/web_directory_enum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/web_directory_enum/</guid>
      <description>feroxbuster wfuzz gobuster bfac ds_walk HTTP feroxbuster -u &amp;lt;TARGET&amp;gt; --depth 1 --methods=GET,POST -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt --dont-extract-links HTTPS feroxbuster -u &amp;lt;TARGET&amp;gt; -k --depth 1 --methods=GET,POST -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt --dont-extract-links Specify Extension feroxbuster -u &amp;lt;TARGET&amp;gt; --methods=GET,POST --depth=1 -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.txt -x html, asp, aspx Add trailing slash &amp;apos;/&amp;apos; to each request feroxbuster -u &amp;lt;TARGET&amp;gt; -f --depth 1 --methods=GET,POST -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt API Fuzzing feroxbuster -u &amp;lt;TARGET&amp;gt; --force-recursion -C 404,405 --methods=GET,POST -w /usr/share/seclists/Discovery/Web-Content/raft-medium-directories.txt Fuzzing Number Range wfuzz -z range,1-99 &amp;lt;TARGET&amp;gt;/FUZZ gobuster dir -u &amp;lt;TARGET&amp;gt; -w /usr/share/seclists/Discovery/Web-Content/raft-medium-words.</description>
    </item>
    <item>
      <title>Webdav</title>
      <link>https://tldrbins.github.io/webdav/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/webdav/</guid>
      <description>Tools davtest curl # Without creds davtest -url http://&amp;lt;TARGET&amp;gt; # With creds davtest -url http://&amp;lt;TARGET&amp;gt; -auth &amp;#39;&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;&amp;#39; Ref: Download davtest&#xA;# Rename a remote file curl -X MOVE -H &amp;#39;Destination:http://&amp;lt;TARGET&amp;gt;/&amp;lt;NEW_FILENAME&amp;gt;&amp;#39; http://&amp;lt;TARGET&amp;gt;/&amp;lt;FILE&amp;gt; </description>
    </item>
    <item>
      <title>Windows RPC</title>
      <link>https://tldrbins.github.io/windows_rpc/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/windows_rpc/</guid>
      <description>Windows RPC impacket IOXIDResolver # Show mappings impacket-rpcmap &amp;#39;ncacn_ip_tcp:&amp;lt;TARGET&amp;gt;&amp;#39; $ impacket-rpcmap &amp;#39;ncacn_ip_tcp:10.10.10.213&amp;#39; Impacket v0.12.0.dev1+20240730.164349.ae8b81d7 - Copyright 2023 Fortra ...[SNIP]... Protocol: [MS-DCOM]: Distributed Component Object Model (DCOM) Remote Provider: rpcss.dll UUID: 99FCFEC4-5260-101B-BBCB-00AA0021347A v0.0 ...[SNIP]... # Get network interface without auth python3 IOXIDResolver.py -t &amp;lt;TARGET&amp;gt; $ python3 IOXIDResolver.py -t 10.10.10.213 [*] Retrieving network interface of 10.10.10.213 Address: apt Address: 10.10.10.213 Address: dead:beef::b885:d62a:d679:573f Ref: IOXIDResolver</description>
    </item>
    <item>
      <title>Wordpress</title>
      <link>https://tldrbins.github.io/wordpress/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/wordpress/</guid>
      <description>Default config location /var/www/html/wp-config.php Tools wpscan # HTTP wpscan --url &amp;lt;TARGET&amp;gt; -e ap,t,tt,u # HTTPS wpscan --url &amp;lt;TARGET&amp;gt; -e ap,t,tt,u --disable-tls-checks # You will need an api token to scan vulns wpscan --url &amp;lt;TARGET&amp;gt; -e ap,t,tt,u --api-token &amp;lt;API_KEY&amp;gt; # Brute force wp-admin wpscan --url &amp;lt;TARGET&amp;gt; --passwords passwords.txt --usernames admin Ref: Get Free API key</description>
    </item>
  </channel>
</rss>
